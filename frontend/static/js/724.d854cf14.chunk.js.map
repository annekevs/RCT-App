{"version":3,"file":"static/js/724.d854cf14.chunk.js","mappings":"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","sources":["modules/shared/Sidebar/index.tsx","modules/admin/components/AdminContainer.tsx","modules/shared/CustomCard/index.tsx","modules/admin/pages/AdminDashboard.tsx","modules/admin/pages/Utilisateurs/AddUserPage.tsx","modules/shared/DateToFrench/dictionary.ts","modules/shared/DateToFrench/index.ts","modules/shared/Table/index.tsx","entities/medecin.entity.tsx","modules/admin/components/Utilisateur/ListUserComponent.tsx","modules/admin/pages/Utilisateurs/UserListPage.tsx","modules/admin/components/Utilisateur/InfoUserComponent.tsx","modules/admin/components/Utilisateur/DemandeComponent.tsx","modules/admin/pages/Utilisateurs/UserDemandePage.tsx","modules/admin/components/Patients/PatientInfoForm.tsx","modules/admin/components/Patients/PatientForm.tsx","modules/admin/pages/Patients/AddPatientPage.tsx","entities/patient.entity.tsx","modules/admin/components/Patients/ListPatientComponent.tsx","modules/admin/pages/Patients/PatientListPage.tsx","modules/shared/ButtonWithModal/index.tsx","entities/dossier.entity.tsx","modules/admin/components/dossier/DossierAjout.tsx","modules/admin/components/dossier/DossierList.tsx","modules/admin/pages/Registre/RegistrePrincipalPage.tsx","modules/admin/pages/Registre/RegistreTraitementPage.tsx","modules/admin/pages/Registre/RegistreTamponPage.tsx","modules/admin/pages/Registre/RegistreDecesPage.tsx","modules/admin/pages/Analyse/NouvelleAnalyse.tsx","modules/admin/pages/Analyse/AnalyseDemandePage.tsx","modules/admin/pages/Analyse/AnalyseListDemande.tsx","modules/admin/pages/Analyse/AnalyseHistoriquePage.tsx","modules/admin/pages/Parametres/ParametresDonneesPage.tsx","modules/admin/pages/Parametres/ParametresConfig.tsx","modules/admin/pages/Patients/ShowPatientPage.tsx","modules/admin/components/dossier/rubriques/FormDiagnostic.tsx","modules/admin/components/dossier/rubriques/FormEnquete.tsx","modules/admin/components/dossier/rubriques/FormExamen.tsx","modules/admin/components/dossier/rubriques/FormHistoire.tsx","modules/admin/components/dossier/rubriques/FormMotif.tsx","modules/admin/components/dossier/rubriques/FormScore.tsx","modules/admin/components/dossier/rubriques/FormDeces.tsx","modules/admin/components/dossier/rubriques/FormTransfert.tsx","modules/admin/components/dossier/rubriques/FormTampon.tsx","modules/admin/components/dossier/rubriques/FormStatut.tsx","modules/admin/components/dossier/rubriques/FormAntecedent.tsx","modules/admin/components/dossier/rubriques/FormComorbidite.tsx","modules/admin/components/dossier/steps/DossierAnamnese.tsx","modules/admin/components/dossier/steps/DossierTraitement.tsx","modules/admin/components/dossier/steps/DossierSuivi.tsx","modules/admin/components/dossier/steps/DossierRehabilitation.tsx","modules/admin/components/dossier/DossierDetails.tsx","modules/admin/pages/Registre/AddDossierPage.tsx","services/pdfrenderer/PDFDossierComplet.tsx","modules/admin/pages/Registre/ShowDossierPage.tsx","modules/admin/pages/Registre/RegistreFSPage.tsx","modules/admin/pages/Registre/RegistrePraticienPage.tsx","modules/admin/pages/Utilisateurs/ShowUserPage.tsx","modules/admin/routes/index.tsx","modules/shared/ComingSoon/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ReactNode } from \"react\";\r\nimport { PRIMARY } from \"../../../shared/colors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\n\r\nconst SidebarContainer = styled.div`\r\n  .clicked {\r\n    color: ${PRIMARY};\r\n  }\r\n`;\r\n\r\nexport const Sidebar = ({\r\n  routes,\r\n  clicked,\r\n}: {\r\n  routes: ItemBarType[];\r\n  clicked: string;\r\n}) => {\r\n  const router = useHistory();\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <aside id=\"sidebar\" className=\"sidebar\">\r\n        <ul className=\"sidebar-nav\" id=\"sidebar-nav\">\r\n          {routes.map((item) =>\r\n            item.subItems ? (\r\n              <li className=\"nav-item\" key={item.clicked}>\r\n                <div\r\n                  className={\r\n                    clicked.includes(item.clicked)\r\n                      ? \"nav-link active\"\r\n                      : \"nav-link collapsed\"\r\n                  }\r\n                  data-bs-target={`#${item.clicked}`}\r\n                  data-bs-toggle=\"collapse\"\r\n                >\r\n                  <i>{item.icon(clicked)}</i>\r\n                  <span>{item.title}</span>{\" \"}\r\n                  <i className=\"bi bi-chevron-down ms-auto\">\r\n                    <BiChevronDown />\r\n                  </i>\r\n                </div>\r\n                <ul\r\n                  id={`${item.clicked}`}\r\n                  className={\r\n                    clicked.includes(item.clicked)\r\n                      ? \"nav-content collapse show\"\r\n                      : \"nav-content collapse\"\r\n                  }\r\n                  data-bs-parent=\"#sidebar-nav\"\r\n                >\r\n                  {item.subItems.map((subItem) => (\r\n                    <li key={subItem.clicked}>\r\n                      <div\r\n                        className={clicked === subItem.clicked ? \"active\" : \"\"}\r\n                        onClick={() =>\r\n                          router.push({\r\n                            pathname: subItem.link,\r\n                            state: {\r\n                              formationSanitaire: subItem.values\r\n                                ? subItem.select\r\n                                : null,\r\n                            },\r\n                          })\r\n                        }\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target={\"#collapseWidth-\" + subItem.clicked}\r\n                        aria-expanded=\"false\"\r\n                        aria-controls={\"#collapseWidth-\" + subItem.clicked}\r\n                      >\r\n                        <i>{subItem.icon(clicked)}</i>\r\n                        <span>{subItem.title}</span>\r\n                      </div>\r\n                      {subItem.values && clicked === subItem.clicked ? (\r\n                        <div\r\n                          className=\"collapse\"\r\n                          id={\"collapseWidth-\" + subItem.clicked}\r\n                        >\r\n                          {subItem.values}\r\n                        </div>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ) : (\r\n              <li className=\"nav-item\" key={item.clicked}>\r\n                <div\r\n                  className={\r\n                    clicked === item.clicked ? \"nav-link active\" : \"nav-link\"\r\n                  }\r\n                  onClick={() => router.push(item.link)}\r\n                >\r\n                  <i>{item.icon(clicked)}</i>\r\n                  <span>{item.title}</span>\r\n                </div>\r\n              </li>\r\n            )\r\n          )}\r\n        </ul>\r\n      </aside>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\ntype ItemBarType = {\r\n  title: string;\r\n  clicked: string;\r\n  link: string;\r\n  icon: (shrink: string) => ReactNode;\r\n  subItems?: ItemBarType[];\r\n  values?: React.ReactNode;\r\n  select?: any;\r\n};\r\n","import { AppFooter } from \"../../shared/Footer\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { ROUTES } from \"../../../routes\";\r\nimport { BS_BLUE, GREY_LIGHT } from \"../../../shared/colors\";\r\nimport { Navbar } from \"../../shared/Navbar\";\r\nimport { Sidebar } from \"../../shared/Sidebar\";\r\nimport {\r\n  FaBookDead,\r\n  FaBookMedical,\r\n  FaChartBar,\r\n  FaCogs,\r\n  FaCommentMedical,\r\n  FaForward,\r\n  FaHistory,\r\n  FaHome,\r\n  FaHospitalAlt,\r\n  FaHospitalUser,\r\n  FaListUl,\r\n  FaMailBulk,\r\n  FaReadme,\r\n  FaSync,\r\n  FaTools,\r\n  FaTrashAlt,\r\n  FaUserNurse,\r\n  FaUserPlus,\r\n  FaUsers,\r\n  FaUsersCog,\r\n} from \"react-icons/fa\";\r\nimport { Select, SelectProps } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const AdminContainer = ({\r\n  clicked,\r\n  children,\r\n  praticien,\r\n  formation_sanitaire,\r\n}: {\r\n  clicked: string;\r\n  children: ReactNode;\r\n  praticien?: string | number; // id du praticien\r\n  formation_sanitaire?: string | number; // id de la formation sanitaire\r\n}) => {\r\n  const [shrink, setShrink] = useState(false);\r\n  const router = useHistory();\r\n  // getLocal values\r\n  const localPraticiens = localStorage.getItem(\"praticiens\");\r\n  const praticiens = localPraticiens ? JSON.parse(localPraticiens) : [];\r\n  const localFS = localStorage.getItem(\"formationSanitaires\");\r\n  const formationSanitaires = localFS ? JSON.parse(localFS) : [];\r\n\r\n  const [selectedPraticien, setSelectedPraticien] = useState(praticien);\r\n  const [selectedFormationSanitaire, setSelectedFormationSanitaire] =\r\n    useState(formation_sanitaire);\r\n  const optionsPT: SelectProps[\"options\"] = [];\r\n  const optionsFS: SelectProps[\"options\"] = [];\r\n\r\n  const handleFSChange = (organismeId: any) => {\r\n    setSelectedFormationSanitaire(\r\n      formationSanitaires.find((organisme: any) => organisme.id === organismeId)\r\n        ?.id\r\n    );\r\n    router.push({\r\n      pathname: ROUTES.REGISTRE_PAGE.FORMATION_SANITAIRE,\r\n      state: {\r\n        formation_sanitaire: formationSanitaires.find(\r\n          (organisme: any) => organisme.id === organismeId\r\n        )?.id,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handlePraticienChange = (praticienId: any) => {\r\n    setSelectedPraticien(\r\n      praticiens.find((praticien: any) => praticien.id === praticienId).id\r\n    );\r\n    router.push({\r\n      pathname: ROUTES.REGISTRE_PAGE.PRATICIEN,\r\n      state: {\r\n        praticien: praticiens.find(\r\n          (praticien: any) => praticien.id === praticienId\r\n        ).id,\r\n      },\r\n    });\r\n  };\r\n\r\n  praticiens.map((i: any) => {\r\n    optionsPT.push({\r\n      value: i.id,\r\n      label: i.nom + \"  \" + i.prenom,\r\n    });\r\n  });\r\n\r\n  formationSanitaires.map((i: any) => {\r\n    optionsFS.push({\r\n      value: i.id,\r\n      label: i.designation,\r\n    });\r\n  });\r\n\r\n  const SelectPraticien = () => {\r\n    return {\r\n      node: (\r\n        <Select\r\n          showSearch\r\n          placeholder=\"\"\r\n          optionFilterProp=\"children\"\r\n          defaultActiveFirstOption\r\n          filterOption={(input: any, option: any) =>\r\n            (option?.label ?? \"\").toLowerCase().includes(input)\r\n          }\r\n          filterSort={(optionA: any, optionB: any) =>\r\n            (optionA?.label ?? \"\")\r\n              .toLowerCase()\r\n              .localeCompare((optionB?.label ?? \"\").toLowerCase())\r\n          }\r\n          options={optionsPT}\r\n          className=\"col-12\"\r\n          defaultValue={selectedPraticien}\r\n          onChange={handlePraticienChange}\r\n        />\r\n      ),\r\n      value: selectedPraticien,\r\n    };\r\n  };\r\n\r\n  const SelectFormationSanitaire = () => {\r\n    return {\r\n      node: (\r\n        <Select\r\n          showSearch\r\n          placeholder=\"\"\r\n          optionFilterProp=\"children\"\r\n          defaultActiveFirstOption\r\n          filterOption={(input: any, option: any) =>\r\n            (option?.label ?? \"\").toLowerCase().includes(input)\r\n          }\r\n          filterSort={(optionA: any, optionB: any) =>\r\n            (optionA?.label ?? \"\")\r\n              .toLowerCase()\r\n              .localeCompare((optionB?.label ?? \"\").toLowerCase())\r\n          }\r\n          options={optionsFS}\r\n          className=\"col-12\"\r\n          defaultValue={selectedFormationSanitaire}\r\n          onChange={handleFSChange}\r\n        />\r\n      ),\r\n      value: selectedFormationSanitaire,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className={shrink ? \"toggle-sidebar\" : \"\"}>\r\n      <Navbar\r\n        homeLink={ROUTES.ADMIN_PAGE.DASHBOARD}\r\n        shrink={shrink}\r\n        setShrink={setShrink}\r\n      />\r\n\r\n      <Sidebar\r\n        routes={ADMIN_SIDEBAR_ITEMS(\r\n          SelectFormationSanitaire(),\r\n          SelectPraticien()\r\n        )}\r\n        clicked={clicked}\r\n      />\r\n\r\n      <main id=\"main\" className=\"main\">\r\n        {/* <PageBreadcrumb /> */}\r\n        <div>{children}</div>\r\n      </main>\r\n\r\n      <AppFooter />\r\n      <a\r\n        href={ROUTES.ADMIN_PAGE.DASHBOARD}\r\n        className=\"back-to-top d-flex align-items-center justify-content-center\"\r\n      >\r\n        <i className=\"bi bi-arrow-up-short\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ADMIN_SIDEBAR_ITEMS = (formationSanitaires: any, praticiens: any) => [\r\n  {\r\n    icon: (clicked: string) => (\r\n      <FaHome\r\n        color={clicked === \"admin-dashboard\" ? BS_BLUE : GREY_LIGHT}\r\n        size={24}\r\n      />\r\n    ),\r\n    link: \"/admin/dashboard\",\r\n    title: \"Dashboard\",\r\n    clicked: \"admin-dashboard\",\r\n  },\r\n  {\r\n    icon: (clicked: string) => (\r\n      <FaUsersCog\r\n        color={clicked.includes(\"users\") ? BS_BLUE : GREY_LIGHT}\r\n        size={24}\r\n      />\r\n    ),\r\n    link: \"/admin/users\",\r\n    title: \"Utilisateurs\",\r\n    clicked: \"users\",\r\n    subItems: [\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaUserPlus\r\n            color={clicked === \"users-new\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/users/new\",\r\n        title: \"Ajouter un utilisateur\",\r\n        clicked: \"users-new\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaUsers\r\n            color={clicked === \"users-list\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/users/list\",\r\n        title: \"Liste des utilisateurs\",\r\n        clicked: \"users-list\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaMailBulk\r\n            color={clicked === \"users-demandes\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/users/demandes\",\r\n        title: \"Demandes d'adhésion\",\r\n        clicked: \"users-demandes\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    icon: (clicked: string) => (\r\n      <FaHospitalUser\r\n        color={clicked.includes(\"patients\") ? BS_BLUE : GREY_LIGHT}\r\n        size={24}\r\n      />\r\n    ),\r\n    link: \"/admin/patients\",\r\n    title: \"Patients\",\r\n    clicked: \"patients\",\r\n    subItems: [\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaUserPlus\r\n            color={clicked === \"patients-new\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/patients/new\",\r\n        title: \"Ajouter un patient\",\r\n        clicked: \"patients-new\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaUsers\r\n            color={clicked === \"patients-list\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/patients/list\",\r\n        title: \"Liste des patients\",\r\n        clicked: \"patients-list\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    icon: (clicked: string) => (\r\n      <FaBookMedical\r\n        color={clicked.includes(\"registre\") ? BS_BLUE : GREY_LIGHT}\r\n        size={24}\r\n      />\r\n    ),\r\n    link: \"/admin/registre\",\r\n    title: \"Registres\",\r\n    clicked: \"registre\",\r\n    subItems: [\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaListUl\r\n            color={clicked === \"registre-all\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/registre/all\",\r\n        title: \"Registre principal\",\r\n        clicked: \"registre-all\",\r\n      },\r\n      // {\r\n      //   icon: (clicked: string) => (\r\n      //     <FaHospitalAlt\r\n      //       color={clicked === \"registre-secondaire\" ? BS_BLUE : GREY_LIGHT}\r\n      //       size={24}\r\n      //     />\r\n      //   ),\r\n      //   link: \"/admin/registre/secondaire\",\r\n      //   title: \"Registre secondaire\",\r\n      //   clicked: \"registre-secondaire\"\r\n      // },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaHospitalAlt\r\n            color={clicked === \"registre-fs\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/registre/fs\",\r\n        title: \"Formations sanitaires\",\r\n        clicked: \"registre-fs\",\r\n        values: formationSanitaires.node,\r\n        select: formationSanitaires.value,\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaUserNurse\r\n            color={clicked === \"registre-praticien\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/registre/praticien\",\r\n        title: \"Practiciens\",\r\n        clicked: \"registre-praticien\",\r\n        values: praticiens.node,\r\n        select: praticiens.value,\r\n      },\r\n\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaSync\r\n            color={clicked === \"registre-traitement\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/registre/traitement\",\r\n        title: \"Instance de traitement\",\r\n        clicked: \"registre-traitement\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaTrashAlt\r\n            color={clicked === \"registre-tampon\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/registre/tampon\",\r\n        title: \"Registre tampon\",\r\n        clicked: \"registre-tampon\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaBookDead\r\n            color={clicked === \"registre-deces\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/registre/deces\",\r\n        title: \"Registre des déces\",\r\n        clicked: \"registre-deces\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    icon: (clicked: string) => (\r\n      <FaChartBar\r\n        color={clicked.includes(\"analyse\") ? BS_BLUE : GREY_LIGHT}\r\n        size={24}\r\n      />\r\n    ),\r\n    link: \"/admin/analyse\",\r\n    title: \"Analyse des données\",\r\n    clicked: \"analyse\",\r\n    subItems: [\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaForward\r\n            color={clicked === \"analyse-new\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/analyse/new\",\r\n        title: \"Faire une analyse\",\r\n        clicked: \"analyse-new\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaCommentMedical\r\n            color={clicked === \"analyse-demande-new\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/analyse/demandes/new\",\r\n        title: \"Effectuer une demande\",\r\n        clicked: \"analyse-demande-new\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaMailBulk\r\n            color={clicked === \"analyse-demande-list\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/analyse/demandes/list\",\r\n        title: \"Liste des demandes\",\r\n        clicked: \"analyse-demande-list\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaHistory\r\n            color={clicked === \"analyse-historique\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/analyse/historique\",\r\n        title: \"Historique\",\r\n        clicked: \"analyse-historique\",\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   icon: (clicked: string) => (\r\n  //     <FaPenAlt\r\n  //       color={clicked.includes(\"documents\") ? BS_BLUE : GREY_LIGHT}\r\n  //       size={24}\r\n  //     />\r\n  //   ),\r\n  //   link: \"/admin/documents\",\r\n  //   title: \"Edition de documents\",\r\n  //   clicked: \"documents\",\r\n  //   subItems: [\r\n  //     {\r\n  //       icon: (clicked: string) => (\r\n  //         <FaFileMedicalAlt\r\n  //           color={clicked === \"documents-certificat\" ? BS_BLUE : GREY_LIGHT}\r\n  //           size={24}\r\n  //         />\r\n  //       ),\r\n  //       link: \"/admin/documents/certificat\",\r\n  //       title: \"Certificat médical\",\r\n  //       clicked: \"documents-certificat\",\r\n  //     },\r\n  //     {\r\n  //       icon: (clicked: string) => (\r\n  //         <FaHandHoldingMedical\r\n  //           color={clicked === \"documents-expertise\" ? BS_BLUE : GREY_LIGHT}\r\n  //           size={24}\r\n  //         />\r\n  //       ),\r\n  //       link: \"/admin/documents/expertise\",\r\n  //       title: \"Expertise médicale\",\r\n  //       clicked: \"documents-expertise\",\r\n  //     },\r\n  //     {\r\n  //       icon: (clicked: string) => (\r\n  //         <FaStickyNote\r\n  //           color={clicked === \"documents-dossier\" ? BS_BLUE : GREY_LIGHT}\r\n  //           size={24}\r\n  //         />\r\n  //       ),\r\n  //       link: \"/admin/documents/dossier\",\r\n  //       title: \"Dossier complet\",\r\n  //       clicked: \"documents-dossier\",\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    icon: (clicked: string) => (\r\n      <FaCogs\r\n        color={clicked.includes(\"parametres\") ? BS_BLUE : GREY_LIGHT}\r\n        size={24}\r\n      />\r\n    ),\r\n    link: \"/admin/parametres\",\r\n    title: \"Paramètres\",\r\n    clicked: \"parametres\",\r\n    subItems: [\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaReadme\r\n            color={clicked === \"parametres-donnees\" ? BS_BLUE : GREY_LIGHT}\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/parametres/donnees\",\r\n        title: \"Données de base\",\r\n        clicked: \"parametres-donnees\",\r\n      },\r\n      {\r\n        icon: (clicked: string) => (\r\n          <FaTools\r\n            color={\r\n              clicked === \"parametres-configuration\" ? BS_BLUE : GREY_LIGHT\r\n            }\r\n            size={24}\r\n          />\r\n        ),\r\n        link: \"/admin/parametres/configuration\",\r\n        title: \"Configuration\",\r\n        clicked: \"parametres-configuration\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { FaChevronRight } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const MiniCard = ({ card }: { card: any }) => (\r\n  <div className=\"card p-0 mb-1\">\r\n    <div className=\"card-body text-center p-1\">\r\n      <div className=\"card-text row align-items-end\">\r\n        <span className=\"col-md-3 pb-1\">\r\n          <i className=\"card-icon rounded-circle\">{card.icon}</i>\r\n        </span>\r\n        <div className=\"col-md-9 mx-0\">\r\n          <span>{card.title}</span>\r\n          <h3 className=\"mb-0\"> {card.value}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const CardDashboard = ({\r\n  card,\r\n  size,\r\n}: {\r\n  card: any;\r\n  size?: number | string;\r\n}) => {\r\n  const router = useHistory();\r\n  return (\r\n    <div\r\n      className=\"card p-0\"\r\n      style={{ cursor: \"pointer\", width: size ? size : \"23%\", marginRight: 18 }}\r\n      onClick={() => router.push(card.link)}\r\n    >\r\n      <span className=\"card-header m-0\" style={{ backgroundColor: card.color }}>\r\n        {\" \"}\r\n      </span>\r\n      <div className=\"card-body text-center \">\r\n        <div className=\"card-text row\">\r\n          <span className=\"col-md-3\">\r\n            <i className=\"card-icon rounded-circle\">{card.icon()}</i>\r\n          </span>\r\n          <div className=\"col-md-9 mx-0\">\r\n            <h2 className=\"mb-0\"> {card.value} </h2>\r\n            <span>{card.description}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span\r\n        className=\"card-footer d-flex\"\r\n        style={{ backgroundColor: card.color }}\r\n      >\r\n        <FaChevronRight className=\"ms-auto\" color=\"white\" size={10} />{\" \"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FaMailBulk,\r\n  FaNotesMedical,\r\n  FaUserInjured,\r\n  FaUserNurse,\r\n} from \"react-icons/fa\";\r\nimport { AdminContainer } from \"../components/AdminContainer\";\r\nimport {\r\n  BS_BLUE,\r\n  BS_WARNING,\r\n  GREEN_DARK,\r\n  ORANGE_DARK,\r\n} from \"../../../shared/colors\";\r\nimport { ROUTES } from \"../../../routes\";\r\nimport { CardDashboard } from \"../../shared/CustomCard\";\r\n\r\nexport const AdminDashboard = () => {\r\n  return (\r\n    <AdminContainer clicked=\"admin-dashboard\">\r\n      <h2 className=\"mt-3\" style={{ fontFamily: \"revert-layer\" }}>\r\n        {\" \"}\r\n        Welcome ADMIN !\r\n      </h2>\r\n      <div className=\"row d-flex ms-auto\" style={{ marginTop: \"10 %\" }}>\r\n        {AdminCardsDashboard.map((card) => (\r\n          <CardDashboard card={card} />\r\n        ))}\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nconst AdminCardsDashboard = [\r\n  {\r\n    title: \"Dossiers\",\r\n    description: \"Dossiers\",\r\n    value: 14700,\r\n    color: GREEN_DARK,\r\n    icon: () => <FaNotesMedical size={48} color={GREEN_DARK} />,\r\n    link: \"/admin/registre/all\",\r\n  },\r\n  {\r\n    title: \"Patients\",\r\n    description: \"Patients\",\r\n    value: 145,\r\n    color: BS_WARNING,\r\n    icon: () => <FaUserInjured size={48} color={BS_WARNING} />,\r\n    link: ROUTES.PATIENT_PAGE.LIST_PATIENT,\r\n  },\r\n  {\r\n    title: \"Medecins\",\r\n    description: \"Medecins\",\r\n    value: 25,\r\n    color: BS_BLUE,\r\n    icon: () => <FaUserNurse size={48} color={BS_BLUE} />,\r\n    link: \"/admin/users/list\",\r\n  },\r\n  {\r\n    title: \"Demandes\",\r\n    description: \"Demandes\",\r\n    value: 17,\r\n    color: ORANGE_DARK,\r\n    icon: () => <FaMailBulk size={48} color={ORANGE_DARK} />,\r\n    link: \"/admin/analyse/demandes/list\",\r\n  },\r\n];\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { AddUserComponent } from \"../../components/Utilisateur/AddUserComponent\";\r\n\r\nexport const AddUserPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"users-new\">\r\n      <h2> Ajouter un utilisateur </h2>\r\n      {/* <hr /> */}\r\n      <div className=\"card mt-0\">\r\n        <div className=\"card-body\">\r\n          <AddUserComponent />\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","export const months = [\n  'Janvier',\n  'Février',\n  'Mars',\n  'Avril',\n  'Mai',\n  'Juin',\n  'Juillet',\n  'Aôut',\n  'Septembre',\n  'Octobre',\n  'Novembre',\n  'Décembre',\n];\n\nexport const days = [\n  { full: 'Dimanche', abbr: 'Dim' },\n  { full: 'Lundi', abbr: 'Lun' },\n  { full: 'Mardi', abbr: 'Mar' },\n  { full: 'Mercredi', abbr: 'Mer' },\n  { full: 'Jeudi', abbr: 'Jeu' },\n  { full: 'Vendredi', abbr: 'Ven' },\n  { full: 'Samedi', abbr: 'Sam' },\n];\n","import moment from \"moment\";\nimport { days, months } from \"./dictionary\";\n\n// calcul l'age en années\nconst calculAge = (dateNaissance: string) => {\n  const dateNais = new Date(dateNaissance);\n  var age_dt = new Date(Date.now() - dateNais.getTime());\n  var year = age_dt.getUTCFullYear();\n  var age = Math.abs(year - 1970);\n  return age;\n};\n\nexport const getAge = (date: string) => {\n  let age = moment().diff(moment(date, \"YYYYMMDD\"), \"years\");\n  if (age > 0) {\n    return {\n      value: age,\n      unit: \"ans\",\n    };\n  } else {\n    age = moment().diff(moment(date, \"YYYYMMDD\"), \"months\");\n    if (age > 0) {\n      return {\n        value: age,\n        unit: \"mois\",\n      };\n    } else {\n      age = moment().diff(moment(date, \"YYYYMMDD\"), \"days\");\n      if (age > 0) {\n        return {\n          value: age,\n          unit: \"jours\",\n        };\n      }\n    }\n  }\n};\n\nexport const getDiff = (initialDate: string, finalDate: string) => {\n  let age = moment(finalDate, \"YYYYMMDD\").diff(\n    moment(initialDate, \"YYYYMMDD\"),\n    \"years\"\n  );\n  if (age > 0) {\n    return `${age} ans`;\n  } else {\n    age = moment(finalDate, \"YYYYMMDD\").diff(\n      moment(initialDate, \"YYYYMMDD\"),\n      \"months\"\n    );\n    if (age > 0) {\n      return `${age} mois`;\n    } else {\n      age = moment(finalDate, \"YYYYMMDD\").diff(\n        moment(initialDate, \"YYYYMMDD\"),\n        \"days\"\n      );\n      if (age > 0) {\n        return `${age} jour(s)`;\n      }\n    }\n  }\n};\n\nexport const DateFrHrWithTime = (date: string) => {\n  const dates = new Date(date);\n  return `${days[dates.getDay()].abbr} ${dates.getDate()} ${\n    months[dates.getMonth()]\n  } ${dates.getFullYear()} à ${getHours(dates)}:${getMinutes(dates)}`;\n};\n\nexport const DateFr = (date: string) => {\n  const dates = new Date(date);\n  return `${days[dates.getDay()].abbr} ${dates.getDate()} ${\n    months[dates.getMonth()]\n  } ${dates.getFullYear()}`;\n};\n\nexport const getHours = (date: Date) => {\n  let hour = date.getHours().toString();\n  if (hour.length === 1) {\n    return `0${hour}`;\n  }\n  return hour;\n};\n\nexport const getMinutes = (date: Date) => {\n  let minute = date.getMinutes().toString();\n  if (minute.length === 1) {\n    return `0${minute}`;\n  }\n  return minute;\n};\n","import styled from \"@emotion/styled\";\r\nimport { Input, Space, Table } from \"antd\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport { Key } from \"antd/lib/table/interface\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { SEMIDARK } from \"../../../shared/colors\";\r\nimport { DateFrHrWithTime } from \"../DateToFrench\";\r\n\r\nconst DataTableContainer = styled.div`\r\n  th {\r\n    background-color: ${SEMIDARK} !important;\r\n    color: white !important;\r\n    font-weight: bold;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    zoom: 1;\r\n  }\r\n`;\r\n\r\nexport const DataTable = <T extends { _id: string }>({\r\n  data,\r\n  columns,\r\n  loading,\r\n  selectedRowKeys,\r\n  onSelectedRowKeysChange,\r\n  filterFunction,\r\n  buttons,\r\n  expandable,\r\n  expandField,\r\n}: {\r\n  columns: ColumnsType<T>;\r\n  data: T[];\r\n  loading?: boolean;\r\n  selectedRowKeys?: Key[];\r\n  onSelectedRowKeysChange?: (newSelectedRowKeys: Key[]) => any;\r\n  filterFunction?: (dataItem: T, filterValue: string) => boolean;\r\n  buttons?: ReactNode;\r\n  expandable?: boolean;\r\n  expandField?: string;\r\n}) => {\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const dataToShow = data?.filter((dataItem) =>\r\n    filterFunction ? filterFunction(dataItem, filterValue) : true\r\n  );\r\n\r\n  const selectRow = (rowId: string | number) => {\r\n    if (selectedRowKeys && onSelectedRowKeysChange) {\r\n      let newSelectedRowKeys: Key[] = [];\r\n      if (selectedRowKeys.length === 0) {\r\n        newSelectedRowKeys = [rowId];\r\n      } else if (selectedRowKeys.indexOf(rowId) < 0) {\r\n        newSelectedRowKeys = [...selectedRowKeys, rowId];\r\n      }\r\n      onSelectedRowKeysChange(newSelectedRowKeys);\r\n    }\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: onSelectedRowKeysChange,\r\n  };\r\n\r\n  return (\r\n    <DataTableContainer>\r\n      <Space style={{ marginBottom: 10 }}>\r\n        <Input\r\n          placeholder=\"Filtrer\"\r\n          style={{ width: 300 }}\r\n          value={filterValue}\r\n          onChange={(e) => setFilterValue(e.target.value)}\r\n        />\r\n        {buttons}\r\n      </Space>\r\n      <Table\r\n        rowSelection={selectedRowKeys ? rowSelection : undefined}\r\n        dataSource={dataToShow}\r\n        columns={columns}\r\n        loading={loading}\r\n        expandable={\r\n          expandable && expandField\r\n            ? {\r\n                expandedRowRender: (row: any) => (\r\n                  <span>\r\n                    {\"Categorie creee le : \"}\r\n                    {DateFrHrWithTime(row[expandField])}\r\n                  </span>\r\n                ),\r\n              }\r\n            : {}\r\n        }\r\n        size=\"middle\"\r\n        rowKey=\"_id\"\r\n        onRow={(row) => ({\r\n          onClick: () => {\r\n            selectRow(row._id);\r\n          },\r\n        })}\r\n      />\r\n    </DataTableContainer>\r\n  );\r\n};\r\n","import { Badge, Space, Tag } from \"antd\";\r\nimport {\r\n  FaArrowDown,\r\n  FaCheck,\r\n  FaClock,\r\n  FaInfoCircle,\r\n  FaWindowClose,\r\n} from \"react-icons/fa\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from \"../routes\";\r\nimport { GREY_LIGHT } from \"../shared/colors\";\r\nimport { CODE_RUBRIQUES } from \"../shared/rubrique\";\r\nimport { OrganismeEntity } from \"./organisme.entity\";\r\n\r\nexport class MedecinEntity {\r\n  _id: string;\r\n  code!: string;\r\n  nom: string;\r\n  prenom: string;\r\n  sexe!: boolean;\r\n  date_naissance!: string;\r\n  adresse_mail!: string;\r\n  adresse!: string;\r\n  telephone!: string;\r\n  nationalite!: string;\r\n  type_medecin!: any;\r\n  date_fonction!: string;\r\n  qualification!: string;\r\n  nb_experience!: string;\r\n  actif!: boolean;\r\n  organismes!: string[];\r\n  _identite!: string;\r\n  enregistrer_par!: number;\r\n  disabled: number;\r\n\r\n  constructor(medecin: MedecinEntity) {\r\n    this._id = medecin._id;\r\n    this.code = medecin.code;\r\n    this.prenom = medecin.prenom;\r\n    this.nom = medecin.nom;\r\n    this.disabled = medecin.disabled;\r\n  }\r\n}\r\n\r\nexport const MEDECIN_COLUMNS = () => {\r\n  const router = useHistory();\r\n  const localOrganismes = localStorage.getItem(\"organismes\");\r\n  const organismes = localOrganismes\r\n    ? (JSON.parse(localOrganismes) as OrganismeEntity[])\r\n    : [];\r\n\r\n  return [\r\n    {\r\n      title: \"Nom\",\r\n      key: \"user-nom\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <div>\r\n            <span className=\"text-uppercase\">{cell.nom + \" \"}</span>\r\n            {cell.prenom}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Adresse mail\",\r\n      key: \"user-adresse_mail\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{cell.adresse_mail}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Telephone\",\r\n      key: \"user-telephone\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{row.telephone} </span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Formations sanitaires\",\r\n      key: \"user-formation_sanitaire\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <div>\r\n            <ul>\r\n              {organismes.map((org) => {\r\n                if (\r\n                  row.organismes.includes(org.id) &&\r\n                  org.type_organisme === CODE_RUBRIQUES.FORMATION_SANITAIRE\r\n                ) {\r\n                  return (\r\n                    <li>\r\n                      <Link\r\n                        to={{\r\n                          pathname: ROUTES.REGISTRE_PAGE.FORMATION_SANITAIRE,\r\n                          state: {\r\n                            formation_sanitaire: org.id,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {org.designation}\r\n                      </Link>\r\n                    </li>\r\n                  );\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    // {\r\n    //   title: \"Affiliation\",\r\n    //   key: \"user-affiliation\",\r\n    //   render: (cell: any, row: any) => {\r\n    //     return (\r\n    //       <div>\r\n    //         <ul>\r\n    //           {organismes.map((org) => {\r\n    //             if (\r\n    //               row.organismes.includes(org.id) &&\r\n    //               org.type_organisme === CODE_RUBRIQUES.RESEAU_TRAUMATOLOGIE\r\n    //             ) {\r\n    //               return <li>{org.designation}</li>;\r\n    //             }\r\n    //           })}\r\n    //         </ul>\r\n    //       </div>\r\n    //     );\r\n    //   },\r\n    // },\r\n    {\r\n      title: \"Dossiers\",\r\n      key: \"user-dossiers\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <Link\r\n            to={{\r\n              pathname: ROUTES.REGISTRE_PAGE.PRATICIEN,\r\n              state: {\r\n                praticien: row.id,\r\n              },\r\n            }}\r\n            className=\"text-center\"\r\n          >\r\n            <Badge\r\n              color={row.statut === 2 ? \"green\" : \"orange\"}\r\n              count={row.dossiers.length}\r\n              title=\"Nombre de dossiers\"\r\n              showZero\r\n              className=\"text-center\"\r\n            />\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Statut\",\r\n      key: \"user-statut\",\r\n      render: (cell: any, row: any) => {\r\n        return <span> {UserStatutTag(row.statut)} </span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"user-actions\",\r\n      render: (cell: any, row: any) => (\r\n        <Space>\r\n          <div style={{ cursor: \"pointer\" }}>\r\n            {/* consulter les infos du praticien */}\r\n            <FaInfoCircle\r\n              size={24}\r\n              color={GREY_LIGHT}\r\n              onClick={() =>\r\n                router.push({\r\n                  pathname: ROUTES.USER_PAGE.SHOW_USER,\r\n                  state: {\r\n                    user: row,\r\n                    readOnly: true,\r\n                  },\r\n                })\r\n              }\r\n              style={{ color: \"#FF4D4F\" }}\r\n            />\r\n          </div>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n};\r\n\r\nconst UserStatutTag = (val: any) => {\r\n  switch (val) {\r\n    case 0: // nouveau\r\n      return (\r\n        <Tag\r\n          icon={<FaArrowDown size={12} />}\r\n          color=\"processing\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> nouveau </span>\r\n        </Tag>\r\n      );\r\n    case 1: // en attente de validation\r\n      return (\r\n        <Tag\r\n          icon={<FaClock size={12} />}\r\n          color=\"processing\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> en attente </span>\r\n        </Tag>\r\n      );\r\n    case 2: // acceptée\r\n      return (\r\n        <Tag\r\n          icon={<FaCheck size={12} />}\r\n          color=\"success\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> acceptée </span>\r\n        </Tag>\r\n      );\r\n    case 3: // rejetée\r\n      return (\r\n        <Tag\r\n          icon={<FaWindowClose size={12} className=\"rounded-pill\" />}\r\n          color=\"error\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> rejetée </span>\r\n        </Tag>\r\n      );\r\n    default:\r\n      return (\r\n        <Tag\r\n          icon={<FaCheck size={12} />}\r\n          color=\"default\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> en attente </span>\r\n        </Tag>\r\n      );\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchMedecins } from \"../../network\";\r\nimport { Space } from \"antd\";\r\nimport { DataTable } from \"../../../shared/Table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport {\r\n  MEDECIN_COLUMNS,\r\n  MedecinEntity,\r\n} from \"../../../../entities/medecin.entity\";\r\nimport { PATIENT_COLUMNS } from \"../../../../entities/patient.entity\";\r\n\r\nexport const ListUserComponent = () => {\r\n  const router = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [medecins, setMedecins] = useState<MedecinEntity[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchMedecins().then((data) => {\r\n      if (data.success) {\r\n        console.log(\"liste des medecins : \", data.result);\r\n        setMedecins(data.result);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // console.log(\"why medecins columns doesn't work \", MEDECIN_COLUMNS);\r\n\r\n  return (\r\n    <div>\r\n      <DataTable\r\n        key={\"list-user-table\"}\r\n        loading={isLoading}\r\n        data={medecins}\r\n        columns={MEDECIN_COLUMNS()}\r\n        filterFunction={(medecins: MedecinEntity, filterValue: string) =>\r\n          medecins.nom.toLowerCase().includes(filterValue) ||\r\n          medecins.prenom.toLowerCase().includes(filterValue)\r\n        }\r\n        buttons={\r\n          <Space>\r\n            <button\r\n              className=\"btn btn-outline-primary\"\r\n              onClick={() => {\r\n                router.push(ROUTES.USER_PAGE.ADD_USER);\r\n              }}\r\n            >\r\n              Ajouter\r\n            </button>\r\n          </Space>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { ListUserComponent } from \"../../components/Utilisateur/ListUserComponent\";\r\n\r\nexport const UserListPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"users-list\">\r\n      <h5> Liste des utilisateurs </h5>\r\n      <hr />\r\n      <ListUserComponent />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Descriptions, Tabs, TabsProps } from \"antd\";\r\nimport { FaUserNurse } from \"react-icons/fa\";\r\nimport { BsPersonBoundingBox } from \"react-icons/bs\";\r\nimport { EltRubriqueEntity } from \"../../../../entities/eltRubrique.entity\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OrganismeEntity } from \"../../../../entities/organisme.entity\";\r\nimport { fetchEltRubrique, fetchOrganisme } from \"../../network\";\r\nimport { CODE_RUBRIQUES } from \"../../../../shared/rubrique\";\r\n\r\nexport const InfoUserComponent = ({ user }: { user: any }) => {\r\n  const [eltRubriques, setEltRubriques] = useState<EltRubriqueEntity[]>([]);\r\n  const [organismes, setOrganismes] = useState<OrganismeEntity[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchEltRubrique()\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setEltRubriques(data.result);\r\n        }\r\n      })\r\n      .then(() => {\r\n        fetchOrganisme().then((data) => {\r\n          if (data.success) {\r\n            setOrganismes(data.result);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const items: TabsProps[\"items\"] = [\r\n    {\r\n      key: \"1\",\r\n      label: (\r\n        <span>\r\n          <BsPersonBoundingBox className=\"mx-3\" size={28} />\r\n          Données personnelles\r\n        </span>\r\n      ),\r\n      children: (\r\n        <div className=\"row mx-3\">\r\n          <Descriptions title=\"\" column={1}>\r\n            <Descriptions.Item label=\"Nom\">{user.nom}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Prénom\">{user.prenom}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Sexe\">{user.sexe}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Date de naissance\">\r\n              {user.date_naissance}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Adresse mail\">\r\n              {user.adresse_mail}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Telephone\">\r\n              {user.telephone}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Adresse\">\r\n              {user.adresse}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      label: (\r\n        <span>\r\n          <FaUserNurse className=\"mx-3\" size={28} />\r\n          Statut médical\r\n        </span>\r\n      ),\r\n      children: (\r\n        <div className=\"row mx-3\">\r\n          <Descriptions title=\"\" column={1}>\r\n            <Descriptions.Item label=\"N° ONMC\">{user.id}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Qualification\">\r\n              {\r\n                eltRubriques.find((elt) => elt.id === user.qualification)\r\n                  ?.designation\r\n              }\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Années d'experience\">\r\n              {user.date_fonction}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Réseaux de traumatologie\">\r\n              <ul>\r\n                {organismes.map((org) => {\r\n                  if (\r\n                    user.organismes.includes(org.id) &&\r\n                    org.type_organisme === CODE_RUBRIQUES.RESEAU_TRAUMATOLOGIE\r\n                  ) {\r\n                    return <li>{org.designation}</li>;\r\n                  }\r\n                })}\r\n              </ul>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Formations sanitaires\">\r\n              <ul>\r\n                {organismes.map((org) => {\r\n                  if (\r\n                    user.organismes.includes(org.id) &&\r\n                    org.type_organisme === CODE_RUBRIQUES.FORMATION_SANITAIRE\r\n                  ) {\r\n                    return <li>{org.designation}</li>;\r\n                  }\r\n                })}\r\n              </ul>\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Tabs defaultActiveKey=\"1\" items={items} />\r\n    </div>\r\n  );\r\n};\r\n","import { Avatar, List, Space, Spin, Tag, notification } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaArrowDown, FaCheck, FaClock, FaWindowClose } from \"react-icons/fa\";\r\nimport { COLOR_LIST } from \"../../../../shared/colors\";\r\nimport { InfoUserComponent } from \"./InfoUserComponent\";\r\nimport { accepterDemande, fetchDemandes, rejeterDemande } from \"../../network\";\r\n\r\nconst getColor = () =>\r\n  COLOR_LIST[Math.floor(Math.random() * COLOR_LIST.length)];\r\n\r\nexport const DemandeComponent = () => {\r\n  const [isLoadingData, setIsLoadingData] = useState(true);\r\n  const [demandes, setDemandes] = useState<any[]>([]);\r\n  const [isReplying, setIsReplying] = useState(false);\r\n  const [reload, setReload] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (reload) {\r\n      fetchDemandes().then((data) => {\r\n        if (data.success) {\r\n          setDemandes(data.result);\r\n          setIsLoadingData(false);\r\n          setReload(false);\r\n        } else {\r\n          notification.error({\r\n            message: \"Erreur\",\r\n            description: \"Impossible de récuperer la liste des demandes\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [reload]);\r\n\r\n  const rejectDemande = async (item: any, motif?: string) => {\r\n    setIsReplying(true);\r\n    await rejeterDemande({\r\n      demandeID: item.id,\r\n      medecin: item.personne,\r\n      motif: motif ? motif : null,\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setIsReplying(false);\r\n          notification.success({\r\n            message: \"Succes\",\r\n            description:\r\n              \"La demande a bien été rejetée. Un mail sera envoyé au médecin.\",\r\n          });\r\n          //   window.location.reload();\r\n          setReload(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        notification.error({\r\n          message: \"Erreur\",\r\n          description:\r\n            \"L'opération n'a pu être effectuée. Veuillez reessayer plus tard.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const acceptDemande = async (item: any, motif?: string) => {\r\n    setIsReplying(true);\r\n    await accepterDemande({\r\n      demandeID: item.id,\r\n      medecin: item.personne,\r\n      motif: motif ? motif : null,\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setIsReplying(false);\r\n          notification.success({\r\n            message: \"Succes\",\r\n            description:\r\n              \"La demande a bien été acceptée. Un mail sera envoyé au médecin.\",\r\n          });\r\n          //   window.location.reload();\r\n          setReload(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        notification.error({\r\n          message: \"Erreur\",\r\n          description:\r\n            \"L'opération n'a pu être effectuée. Veuillez reessayer plus tard.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const ItemModal = (item: any) => {\r\n    return (\r\n      <div>\r\n        <Spin spinning={isReplying}>\r\n          <div className=\"modal fade\" id={\"itemModal-\" + item.id} tabIndex={-1}>\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">Demande d'adhésion</h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <InfoUserComponent\r\n                    user={item.personne}\r\n                    key={\"infoUser-\" + item.id}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  {item.statut === 0 || item.statut === 1 ? (\r\n                    <Space>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-danger rounded-pill\"\r\n                        data-bs-dismiss=\"modal\"\r\n                        onClick={() => rejectDemande(item)}\r\n                      >\r\n                        Refuser\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-primary rounded-pill\"\r\n                        data-bs-dismiss=\"modal\"\r\n                        onClick={() => acceptDemande(item)}\r\n                      >\r\n                        Accepter\r\n                      </button>\r\n                    </Space>\r\n                  ) : (\r\n                    <span></span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Spin spinning={isLoadingData}>\r\n          <List\r\n            className=\"demo-loadmore-demandes\"\r\n            loading={isLoadingData}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={demandes}\r\n            renderItem={(item) => (\r\n              <List.Item\r\n                actions={\r\n                  item.statut === 0 || item.statut === 1\r\n                    ? [\r\n                        // <Button\r\n                        //   key=\"demandes-loadmore-edit\"\r\n                        //   className=\"rounded-pill\"\r\n                        //   type=\"link\"\r\n                        //   size=\"small\"\r\n                        // >\r\n                        //   accepter\r\n                        // </Button>,\r\n                        // <Button\r\n                        //   key=\"demandes-loadmore-more\"\r\n                        //   className=\"rounded-pill\"\r\n                        //   type=\"link\"\r\n                        //   danger\r\n                        //   size=\"small\"\r\n                        // >\r\n                        //   refuser\r\n                        // </Button>,\r\n                        <span> {item.date_envoie}</span>,\r\n                      ]\r\n                    : [<span> Envoyé le {item.date_reponse}</span>]\r\n                }\r\n                extra={ItemModal(item)}\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{\r\n                        backgroundColor: getColor(),\r\n                        verticalAlign: \"middle\",\r\n                      }}\r\n                      size=\"large\"\r\n                    >\r\n                      {item.personne.nom.charAt(0) +\r\n                        item.personne.prenom.charAt(0)}\r\n                    </Avatar>\r\n                  }\r\n                  title={\r\n                    <div className=\"row\">\r\n                      <span className=\"col-md-4\">\r\n                        {item.personne.nom + \"  \" + item.personne.prenom}\r\n                      </span>\r\n                      <span className=\"col-md-8 ms-auto text-end\">\r\n                        {item.statut === 0 || item.statut === 1\r\n                          ? DemandeTag(\"en attente\")\r\n                          : item.statut === 2\r\n                          ? DemandeTag(\"acceptée\")\r\n                          : DemandeTag(\"rejetée\")}\r\n                      </span>\r\n                    </div>\r\n                  }\r\n                  description=\"Je souhaite devenir membre du Registre Camerounais de Traumatologie\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target={\"#itemModal-\" + item.id}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Spin>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DemandeTag = (val: DemandeStatut) => {\r\n  switch (val) {\r\n    case \"nouveau\":\r\n      return (\r\n        <Tag\r\n          icon={<FaArrowDown size={12} />}\r\n          color=\"processing\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> nouveau </span>\r\n        </Tag>\r\n      );\r\n    case \"en attente\":\r\n      return (\r\n        <Tag\r\n          icon={<FaClock size={12} />}\r\n          color=\"processing\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> en attente </span>\r\n        </Tag>\r\n      );\r\n    case \"acceptée\":\r\n      return (\r\n        <Tag\r\n          icon={<FaCheck size={12} />}\r\n          color=\"success\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> acceptée </span>\r\n        </Tag>\r\n      );\r\n    case \"rejetée\":\r\n      return (\r\n        <Tag\r\n          icon={<FaWindowClose size={12} className=\"rounded-pill\" />}\r\n          color=\"error\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> rejetée </span>\r\n        </Tag>\r\n      );\r\n    default:\r\n      return (\r\n        <Tag\r\n          icon={<FaCheck size={12} />}\r\n          color=\"default\"\r\n          className=\"rounded-pill\"\r\n          bordered={false}\r\n        >\r\n          <span> en attente </span>\r\n        </Tag>\r\n      );\r\n  }\r\n};\r\n\r\ntype DemandeStatut = \"nouveau\" | \"en attente\" | \"acceptée\" | \"rejetée\";\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DemandeComponent } from \"../../components/Utilisateur/DemandeComponent\";\r\nimport { UserDemandeComponent } from \"../../components/Utilisateur/UserDemandeComponent\";\r\n\r\nexport const UserDemandePage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"users-demandes\">\r\n      <h5> Demandes d'adhésion </h5>\r\n      <hr />\r\n      <div className=\"container\">\r\n        <div className=\"card-body\">\r\n          {/* <UserDemandeComponent /> */}\r\n          <DemandeComponent />\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Form, notification, Input, DatePicker, Space, Spin } from \"antd\";\r\nimport { CODE_RUBRIQUES } from \"../../../../shared/rubrique\";\r\nimport {\r\n  DateLayout,\r\n  FullSelectLayout,\r\n  InputLayout,\r\n  RadioLayout,\r\n} from \"../../../shared/Layouts\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { EltRubriqueEntity } from \"../../../../entities/eltRubrique.entity\";\r\nimport { PaysEntity } from \"../../../../entities/pays.entity\";\r\nimport { fetchPays, fetchEltRubrique, createPatient } from \"../../network\";\r\nimport { PatientEntity } from \"../../../../entities/patient.entity\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport { getAge } from \"../../../shared/DateToFrench\";\r\nimport { FaExclamationCircle } from \"react-icons/fa\";\r\nimport { formRules } from \"../../../../shared/formRules\";\r\n\r\nconst sexeItems = [\r\n  { id: \"M\", code: \"M\", designation: \"Homme\", description: \"\" },\r\n  { id: \"F\", code: \"M\", designation: \"Femme\", description: \"\" },\r\n] as EltRubriqueEntity[];\r\n\r\nexport const PatientInfoForm = ({\r\n  patient,\r\n  readOnly,\r\n}: {\r\n  patient?: PatientEntity;\r\n  readOnly?: boolean;\r\n}) => {\r\n  const router = useHistory();\r\n  const [form] = Form.useForm();\r\n  const dateValue = Form.useWatch(\"date_naissance\", form);\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n  const [pays, setPays] = useState<PaysEntity[]>([]);\r\n  const [eltRubriques, setEltRubriques] = useState<EltRubriqueEntity[]>([]);\r\n  const [change, setChange] = useState(readOnly);\r\n\r\n  console.log(\"patient info form readOnly ?\", change, patient, readOnly);\r\n\r\n  const formatDate = (dateValue: string) => {\r\n    // format date to YYYYMMDD format\r\n    const dateToFormat = new Date(dateValue);\r\n    return `${dateToFormat.getFullYear()}${\r\n      dateToFormat.getMonth() + 1 < 10\r\n        ? \"0\" + (dateToFormat.getMonth() + 1)\r\n        : dateToFormat.getMonth() + 1\r\n    }${\r\n      dateToFormat.getDate() < 10\r\n        ? \"0\" + dateToFormat.getDate()\r\n        : dateToFormat.getDate()\r\n    }`;\r\n  };\r\n\r\n  const getAgePatient = getAge(formatDate(dateValue?.toLocaleString()));\r\n\r\n  const isMineur =\r\n    getAgePatient &&\r\n    !(getAgePatient?.unit === \"ans\" && getAgePatient?.value > 15);\r\n\r\n  useEffect(() => {\r\n    fetchPays().then((data) => {\r\n      if (data.success) setPays(data.result);\r\n    });\r\n    fetchEltRubrique().then((data) => {\r\n      if (data.success) setEltRubriques(data.result);\r\n    });\r\n  }, []);\r\n\r\n  const getNationalite = () => {\r\n    const patientNation = pays.find(\r\n      (nat: any) => nat.id === patient?.nationalite\r\n    );\r\n    return patientNation?.designation;\r\n  };\r\n\r\n  const getReligion = () => {\r\n    const patientReligion = eltRubriques.find(\r\n      (elt) => elt.id === patient?.religion\r\n    );\r\n    return patientReligion?.designation;\r\n  };\r\n\r\n  const getProfession = (professionId: any) => {\r\n    const patientProfession = eltRubriques.find(\r\n      (elt) => elt.id === professionId\r\n    );\r\n    return patientProfession?.designation;\r\n  };\r\n\r\n  const PatientFormReadOnly = () => {\r\n    return (\r\n      <Form\r\n        name=\"patient-read-form\"\r\n        key=\"patient-read-form\"\r\n        className=\"col-md-10\"\r\n        labelCol={{ span: 8 }}\r\n      >\r\n        <div className=\"row\">\r\n          <Form.Item label=\"Nom\" name=\"nom\">\r\n            <Input\r\n              defaultValue={patient?.nom}\r\n              className=\"text-dark text-uppercase\"\r\n              disabled\r\n              style={{ fontFamily: \"revert\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Prenom\" name=\"prenom\">\r\n            <Input\r\n              defaultValue={patient?.prenom}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <RadioLayout\r\n            label=\"Sexe\"\r\n            name=\"sexe\"\r\n            defaultValue={patient?.sexe}\r\n            items={sexeItems}\r\n            rules={[formRules.ruleNoRequired]}\r\n            disabled\r\n          />\r\n          <Form.Item label=\"Date de naissance\" name=\"date_naissance\">\r\n            <Input\r\n              defaultValue={patient?.date_naissance}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Adresse electronique\" name=\"adresse_mail\">\r\n            <Input\r\n              defaultValue={patient?.adresse_mail}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Adresse\" name=\"adresse\">\r\n            <Input\r\n              defaultValue={patient?.adresse}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Numéro de télephone\" name=\"telephone\">\r\n            <Input\r\n              defaultValue={patient?.telephone}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Nationalite\" name=\"nationalite\">\r\n            <Input\r\n              defaultValue={getNationalite()}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Religion\" name=\"religion\">\r\n            <Input\r\n              defaultValue={getReligion()}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Profession\" name=\"profession\">\r\n            <Input\r\n              defaultValue={getProfession(patient?.profession)}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <div className=\"mt-3\">\r\n            <span\r\n              className=\"mx-3 text-primary\"\r\n              style={{ fontFamily: \"monospace\" }}\r\n            >\r\n              {\" \"}\r\n              Personne à contacter en cas d'urgence{\" \"}\r\n            </span>\r\n            <hr />\r\n          </div>\r\n          <Form.Item label=\"Nom de la personne\" name=\"nom_urgence\">\r\n            <Input\r\n              defaultValue={patient?.nom_urgence}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Numéro de telephone\" name=\"telephone_urgence\">\r\n            <Input\r\n              defaultValue={patient?.telephone}\r\n              className=\"text-dark\"\r\n              disabled\r\n              style={{ fontFamily: \"revert-layer\", fontSize: 17 }}\r\n            />\r\n          </Form.Item>\r\n          <div className=\"ms-auto col-md-3 d-none\">\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              onClick={() => {\r\n                setChange(false);\r\n              }}\r\n            >\r\n              Modifier\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  const PatientFormEditable = () => {\r\n    return (\r\n      <Spin spinning={isLoadingForm}>\r\n        <Form\r\n          name=\"patient-info-form\"\r\n          key=\"patient-info-form\"\r\n          form={form}\r\n          className=\"col-md-10\"\r\n          labelCol={{ span: 8 }}\r\n          scrollToFirstError\r\n          onFinish={async (data) => {\r\n            setIsLoadingForm(true);\r\n            let dataToPost = data;\r\n            dataToPost.date_naissance = new Date(\r\n              data.date_naissance\r\n            ).toLocaleString();\r\n            await createPatient(dataToPost).then((data) => {\r\n              if (data.success) {\r\n                notification.success({\r\n                  message: \"Succès\",\r\n                  description: data.message,\r\n                });\r\n                router.push(ROUTES.PATIENT_PAGE.LIST_PATIENT);\r\n              } else {\r\n                notification.error({\r\n                  message: \"Erreur\",\r\n                  description: data.message,\r\n                });\r\n              }\r\n            });\r\n            setIsLoadingForm(false);\r\n          }}\r\n        >\r\n          <div>\r\n            <InputLayout\r\n              label=\"NUI\"\r\n              placeholder=\"Numéro d'Identifiant Unique\"\r\n              name=\"niu\"\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={patient?.niu}\r\n              disabled={readOnly}\r\n            />\r\n            <InputLayout\r\n              label=\"Nom\"\r\n              placeholder=\"Nom du patient\"\r\n              name=\"nom\"\r\n              rules={[formRules.ruleRequired]}\r\n              value={patient?.nom}\r\n              disabled={readOnly}\r\n            />\r\n            <InputLayout\r\n              label=\"Prénoms\"\r\n              name=\"prenom\"\r\n              rules={[formRules.ruleRequired]}\r\n              value={patient?.prenom}\r\n              disabled={readOnly}\r\n              placeholder=\"Prénoms du patient\"\r\n            />\r\n            <RadioLayout\r\n              label=\"Sexe\"\r\n              name=\"sexe\"\r\n              items={sexeItems}\r\n              rules={[formRules.ruleRequired]}\r\n              defaultValue={patient?.sexe}\r\n            />\r\n            <DateLayout\r\n              label=\"Date de naissance\"\r\n              name=\"date_naissance\"\r\n              rules={[formRules.ruleRequired]}\r\n              value={patient?.date_naissance}\r\n              disabled={readOnly}\r\n            />\r\n            {isMineur ? (\r\n              <span className=\"mb-3 text-danger\">\r\n                <i>\r\n                  <FaExclamationCircle color=\"red\" className=\"mx-3\" />\r\n                </i>\r\n                Ce patient est mineur. Les informations suivantes sont celles de\r\n                son tuteur\r\n              </span>\r\n            ) : (\r\n              <span> </span>\r\n            )}\r\n            <InputLayout\r\n              label=\"Adresse electronique\"\r\n              name=\"adresse_mail\"\r\n              className=\"mt-3\"\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={patient?.adresse_mail}\r\n              disabled={readOnly}\r\n              placeholder=\"Email du patient ou du tuteur\"\r\n            />\r\n            <InputLayout\r\n              label=\"Numéro de télephone\"\r\n              name=\"telephone\"\r\n              rules={[formRules.ruleRequired]}\r\n              value={patient?.telephone}\r\n              disabled={readOnly}\r\n              placeholder=\"Telephone du patient ou du tuteur\"\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Nationalité\"\r\n              name=\"nationalite\"\r\n              key={\"patient-nationalite\"}\r\n              items={pays}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={patient?.nationalite}\r\n              disabled={readOnly}\r\n              placeholder=\"Nationalité du patient ou du tuteur\"\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Religion\"\r\n              name=\"religion\"\r\n              key={\"patient-religion\"}\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.RELIGION\r\n              )}\r\n              rules={[formRules.ruleNoRequired]}\r\n              placeholder=\"Religion du patient ou du tuteur\"\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Profession\"\r\n              name=\"profession\"\r\n              key={\"patient-profession\"}\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.PROFESSION\r\n              )}\r\n              rules={[formRules.ruleNoRequired]}\r\n              placeholder=\"Profession du patient ou du tuteur\"\r\n            />\r\n            <div className=\"mt-3\">\r\n              <span\r\n                className=\"mx-3 text-primary\"\r\n                style={{ fontFamily: \"monospace\" }}\r\n              >\r\n                {\" \"}\r\n                Personne à contacter en cas d'urgence{\" \"}\r\n              </span>\r\n              <hr />\r\n            </div>\r\n            <InputLayout\r\n              label=\"Nom de la personne\"\r\n              name=\"nom_urgence\"\r\n              rules={[formRules.ruleRequired]}\r\n              value={patient?.nom_urgence}\r\n              disabled={readOnly}\r\n              placeholder=\"Nom de la personne à contacter en cas d'urgence\"\r\n            />\r\n            <InputLayout\r\n              label=\"Numero de télephone\"\r\n              name=\"telephone_urgence\"\r\n              rules={[formRules.ruleRequired]}\r\n              value={patient?.telephone_urgence}\r\n              disabled={readOnly}\r\n              placeholder=\"Telephone de la personne à contacter en cas d'urgence\"\r\n            />\r\n            <div className=\"row\">\r\n              <Space className=\"ms-auto col-md-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary ml-3 rounded-pill\"\r\n                  onClick={() => router.push(ROUTES.PATIENT_PAGE.LIST_PATIENT)}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary rounded-pill\">\r\n                  Enregistrer\r\n                </button>\r\n              </Space>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Spin>\r\n    );\r\n  };\r\n\r\n  return change ? <PatientFormReadOnly /> : <PatientFormEditable />;\r\n};\r\n","import { Tabs, TabsProps } from \"antd\";\r\nimport { BsPersonBoundingBox } from \"react-icons/bs\";\r\nimport { FaBookOpen, FaFileMedical, FaHistory } from \"react-icons/fa\";\r\nimport { PatientInfoForm } from \"./PatientInfoForm\";\r\nimport { PatientAntecedentForm } from \"./PatientAntecedentForm\";\r\nimport { PatientActiviteForm } from \"./PatientActiviteForm\";\r\nimport { useState } from \"react\";\r\n\r\n// selectionner le patient ou creer un nouveau patient\r\nexport const PatientForm = ({\r\n  patient,\r\n  readOnly,\r\n}: {\r\n  patient?: any;\r\n  readOnly?: boolean;\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const items: TabsProps[\"items\"] = [\r\n    {\r\n      key: \"1\",\r\n      label: (\r\n        <span>\r\n          <BsPersonBoundingBox className=\"mx-3\" size={28} />\r\n          Identification\r\n        </span>\r\n      ),\r\n      children: <PatientInfoForm patient={patient} readOnly={readOnly} />,\r\n    },\r\n    // {\r\n    //   key: \"2\",\r\n    //   label: (\r\n    //     <span>\r\n    //       <FaFileMedical className=\"mx-3\" size={28} />\r\n    //       Antécedents\r\n    //     </span>\r\n    //   ),\r\n    //   children: <PatientAntecedentForm />,\r\n    // },\r\n    // {\r\n    //   key: \"3\",\r\n    //   label: (\r\n    //     <span>\r\n    //       <FaBookOpen className=\"mx-3\" size={28} />\r\n    //       Dossiers médicaux\r\n    //     </span>\r\n    //   ),\r\n    //   children: <PatientActiviteForm />,\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        defaultActiveKey=\"1\"\r\n        items={items}\r\n        activeKey={activeTab}\r\n        onTabClick={(key) => setActiveTab(key)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { PatientForm } from \"../../components/Patients/PatientForm\";\r\n\r\nexport const AddPatientPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"patients-new\">\r\n      <h5> Ajouter un patient </h5>\r\n      <div className=\"card mt-0\">\r\n        <div className=\"card-body\">\r\n          <PatientForm />\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Space, Tooltip } from \"antd\";\r\nimport { FaInfoCircle, FaPencilRuler } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from \"../routes\";\r\nimport { GREEN_DARK } from \"../shared/colors\";\r\nimport { modePCTag, dossierStatutTag } from \"../modules/shared/Layouts\";\r\nimport { DossierEntity } from \"./dossier.entity\";\r\nimport { MedecinEntity } from \"./medecin.entity\";\r\nimport { FormationSanitaireEntity } from \"./formationSanitaire\";\r\n\r\nexport class PatientEntity {\r\n  _id: string;\r\n  code!: string;\r\n  niu!: string;\r\n  nom: string;\r\n  prenom: string;\r\n  sexe!: boolean;\r\n  date_naissance!: string;\r\n  adresse_mail!: string;\r\n  adresse!: string;\r\n  telephone!: string;\r\n  nationalite!: string;\r\n  religion!: string;\r\n  profession!: string;\r\n  nom_urgence!: string;\r\n  telephone_urgence!: string;\r\n  _identite!: string;\r\n  enregistrer_par!: number;\r\n  statut!: number;\r\n  dossiers!: DossierEntity[];\r\n  mode!: number; // mode de prise en charge\r\n  dossier_id!: number;\r\n  nb_dossiers!: number;\r\n  praticien!: MedecinEntity;\r\n  formation_sanitaire!: FormationSanitaireEntity;\r\n  disabled: number;\r\n\r\n  constructor(patient: PatientEntity) {\r\n    this._id = patient._id;\r\n    this.code = patient.code;\r\n    this.prenom = patient.prenom;\r\n    this.nom = patient.nom;\r\n    this.disabled = patient.disabled;\r\n  }\r\n}\r\n\r\nexport const PATIENT_COLUMNS = () => {\r\n  console.log();\r\n  const router = useHistory();\r\n  return [\r\n    {\r\n      title: \"Nom\",\r\n      key: \"patient-nom\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <div>\r\n            <span className=\"text-uppercase\">{cell?.nom + \" \"}</span>\r\n            {cell?.prenom}{\" \"}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Date naissance\",\r\n      key: \"patient-date_naissance\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{cell.date_naissance}</span>;\r\n        // return <span>17/07/96</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Formation sanitaire\",\r\n      key: \"patient-formation_sanitaire\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{row?.formation_sanitaire?.designation} </span>;\r\n        // return <span>Polyclinique de Tsinga </span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"N° Dossier\",\r\n      key: \"patient-last-dossier\",\r\n      render: (cell: any, row: any) => {\r\n        return row.formation_sanitaire ? (\r\n          <span>\r\n            {row?.formation_sanitaire?.id +\r\n              \"Y\" +\r\n              row?.id +\r\n              \"P\" +\r\n              row?.dossier_id}{\" \"}\r\n          </span>\r\n        ) : (\r\n          <span></span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Praticien\",\r\n      key: \"patient-praticien\",\r\n      render: (cell: any, row: any) => {\r\n        return row.praticien ? (\r\n          <span>{row?.praticien?.nom + \" \" + row?.praticien?.prenom} </span>\r\n        ) : (\r\n          \"\"\r\n        );\r\n        // return <span>Lekina Florent </span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Prise en charge\",\r\n      key: \"patient-mode\",\r\n      render: (cell: any, row: any) => {\r\n        return <div className=\"d-flex mx-auto\"> {modePCTag(row.mode)} </div>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Statut\",\r\n      key: \"patient-etape\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <div className=\"d-flex mx-auto\"> {dossierStatutTag(row.statut)} </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"patient-patient-actions\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <Space>\r\n            {/* consulter la fiche du patient */}\r\n            <Tooltip title=\"Consulter la fiche du patient\">\r\n              <FaInfoCircle\r\n                size={24}\r\n                color=\"#FF4D4F\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  router.push({\r\n                    pathname: ROUTES.PATIENT_PAGE.SHOW_PATIENT,\r\n                    state: {\r\n                      patient: row,\r\n                      readOnly: true,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Traiter le patient\">\r\n              <FaPencilRuler\r\n                size={24}\r\n                color={GREEN_DARK}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  router.push({\r\n                    pathname: ROUTES.REGISTRE_PAGE.PRINCIPAL,\r\n                    state: {\r\n                      patient: row?.id,\r\n                      dossier: row?.dossier_id,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchPatients } from \"../../network\";\r\nimport { Space } from \"antd\";\r\nimport { DataTable } from \"../../../shared/Table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport {\r\n  PATIENT_COLUMNS,\r\n  PatientEntity,\r\n} from \"../../../../entities/patient.entity\";\r\n\r\nexport const ListPatientComponent = () => {\r\n  const router = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [patients, setPatients] = useState<PatientEntity[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchPatients().then((data) => {\r\n      if (data.success) {\r\n        setPatients(data.result);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"patient list actions\", patients);\r\n\r\n  return (\r\n    <div>\r\n      {/* <span className=\"text-muted\">\r\n        nom | date de naissance | formation sanitaires\r\n      </span> */}\r\n      <DataTable\r\n        key={\"list-patient-table\"}\r\n        loading={isLoading}\r\n        data={patients} // classer par ordre décroissant\r\n        columns={PATIENT_COLUMNS()}\r\n        filterFunction={(patient: PatientEntity, filterValue: string) =>\r\n          patient.nom.includes(filterValue) ||\r\n          patient.prenom.includes(filterValue) ||\r\n          patient.nom.toLowerCase().includes(filterValue) ||\r\n          patient.prenom.toLowerCase().includes(filterValue) ||\r\n          patient.date_naissance.includes(filterValue)\r\n        }\r\n        buttons={\r\n          <Space>\r\n            <button\r\n              className=\"btn btn-outline-primary rounded-pill\"\r\n              onClick={() => {\r\n                router.push(ROUTES.PATIENT_PAGE.ADD_PATIENT);\r\n              }}\r\n            >\r\n              Ajouter\r\n            </button>\r\n          </Space>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { ListPatientComponent } from \"../../components/Patients/ListPatientComponent\";\r\n\r\nexport const PatientListPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"patients-list\">\r\n      <h2> Liste des patients </h2>\r\n      <ListPatientComponent />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Button, ButtonProps, Modal } from \"antd\";\nimport { useState } from \"react\";\n\nexport const ButtonWithModal = ({\n  width,\n  buttonText,\n  children,\n  modalProps,\n  buttonProps,\n  ...props\n}: {\n  width?: number;\n  buttonText: React.ReactNode;\n  children: (closeModal: () => void) => React.ReactNode;\n  modalProps: Parameters<typeof Modal>[0];\n  buttonProps?: ButtonProps;\n}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const closeModal = () => setIsModalVisible(false);\n  return (\n    <span {...props}>\n      <Button\n        onClick={() => setIsModalVisible(true)}\n        // type=\"ghost\"\n        style={{ display: \"flex\", alignItems: \"center\" }}\n        {...buttonProps}\n      >\n        {buttonText}\n      </Button>\n      <Modal\n        open={isModalVisible}\n        onCancel={closeModal}\n        footer={null}\n        {...modalProps}\n        width={width}\n      >\n        {children(closeModal)}\n      </Modal>\n    </span>\n  );\n};\n\nexport const ModalButton = ({\n  modalTitle,\n  buttonText,\n  buttonColor,\n  children,\n  width,\n}: {\n  buttonText: string;\n  buttonColor: string;\n  modalTitle: string;\n  children: (closeModal: () => void) => React.ReactNode;\n  width?: number;\n}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const closeModal = () => setIsModalVisible(false);\n  return (\n    <div>\n      <button className={\"btn rounded-pill btn-outline-\" + buttonColor}>\n        {buttonText}\n      </button>\n      <Modal\n        open={isModalVisible}\n        onCancel={closeModal}\n        footer={null}\n        centered\n        className=\"text-center\"\n        title={modalTitle}\n        width={width}\n      >\n        {children(closeModal)}\n      </Modal>\n    </div>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\r\nimport { Space, Tooltip, notification } from \"antd\";\r\nimport {\r\n  FaArrowAltCircleRight,\r\n  FaEdit,\r\n  FaExchangeAlt,\r\n  FaInfoCircle,\r\n  FaNotesMedical,\r\n  FaPenAlt,\r\n} from \"react-icons/fa\";\r\nimport { BS_BLUE, GREEN_DARK, GREY_LIGHT, YELLOW_DARK } from \"../shared/colors\";\r\nimport { ROUTES } from \"../routes\";\r\nimport { PatientEntity } from \"./patient.entity\";\r\nimport { dossierStatutTag, modePCTag } from \"../modules/shared/Layouts\";\r\nimport { MedecinEntity } from \"./medecin.entity\";\r\nimport { FormationSanitaireEntity } from \"./formationSanitaire\";\r\nimport { DOSSIER_STATUT } from \"../shared/rubrique\";\r\nimport { useState } from \"react\";\r\n\r\nexport class DossierEntity {\r\n  _id: string;\r\n  code: string;\r\n  patient: PatientEntity;\r\n  sexe!: string;\r\n  dateEntree!: string;\r\n  dateSortie!: string;\r\n  statut!: number;\r\n  visibilite!: boolean;\r\n  transfert!: boolean;\r\n  transfertNb!: number;\r\n  puffer!: boolean;\r\n  pufferNb!: number;\r\n  formation_sanitaire!: FormationSanitaireEntity;\r\n  disabled: number;\r\n  lastUpdate!: string;\r\n  mode!: string;\r\n  step!: string;\r\n  praticien!: MedecinEntity;\r\n  date_traumatisme!: string;\r\n  date_enregistrement!: string;\r\n  payload!: any;\r\n\r\n  constructor(dossier: DossierEntity) {\r\n    this._id = dossier._id;\r\n    this.code = dossier.code;\r\n    this.patient = dossier.patient;\r\n    this.dateEntree = dossier.dateEntree;\r\n    this.dateSortie = dossier.dateSortie;\r\n    this.statut = dossier.statut;\r\n    this.visibilite = dossier.visibilite;\r\n    this.transfert = dossier.transfert;\r\n    this.transfertNb = dossier.transfertNb;\r\n    this.puffer = dossier.puffer;\r\n    this.pufferNb = dossier.pufferNb;\r\n    this.formation_sanitaire = dossier.formation_sanitaire;\r\n    this.disabled = dossier.disabled;\r\n    this.lastUpdate = dossier.lastUpdate;\r\n    this.disabled = dossier.disabled;\r\n  }\r\n}\r\n\r\nexport const DOSSIER_COLUMNS = (\r\n  setIsLoading: (val: boolean) => void,\r\n  setDossiers: (val: any) => void,\r\n  loadData: (\r\n    setIsLoading: (val: boolean) => void,\r\n    setDossiers: (val: any) => void\r\n  ) => void,\r\n  setTraiterDossier?: (val: any) => void,\r\n  setSelectedDossier?: (val: any) => void\r\n) => {\r\n  const router = useHistory();\r\n\r\n  return [\r\n    {\r\n      title: \"Nom\",\r\n      key: \"dossier-nom\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <div>\r\n            <span className=\"text-uppercase\">{cell.patient.nom + \" \"}</span>\r\n            {cell.patient.prenom}{\" \"}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Date naissance\",\r\n      key: \"dossier-date_naissance\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{cell.patient.date_naissance}</span>;\r\n        // return <span>17/07/96</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Formation sanitaire\",\r\n      key: \"dossier-formation_sanitaire\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{row.formation_sanitaire.designation} </span>;\r\n        // return <span>Polyclinique de Tsinga </span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"N° Dossier\",\r\n      key: \"code-dossier\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <span>\r\n            {row.patient.id + \".\" + row.formation_sanitaire.id + \".\" + row.id}\r\n            {/* {\"P\" +\r\n              row.patient.id +\r\n              \"FS\" +\r\n              row.formation_sanitaire.id +\r\n              \"D\" +\r\n              row.id} */}\r\n            {/* {row.formation_sanitaire.id + \"Y\" + row.patient.id + \"P\" + row.id}{\" \"} */}\r\n            {/* 045Y012P002 */}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Praticien\",\r\n      key: \"dossier-praticien\",\r\n      render: (cell: any, row: any) => {\r\n        return <span>{row.praticien.nom + \" \" + row.praticien.prenom} </span>;\r\n        // return <span>Lekina Florent </span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Prise en charge\",\r\n      key: \"dossier-mode\",\r\n      render: (cell: any, row: any) => {\r\n        return <div className=\"d-flex mx-auto\"> {modePCTag(row.mode)} </div>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Statut\",\r\n      key: \"Etape\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <div className=\"d-flex mx-auto\"> {dossierStatutTag(row.statut)} </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"dossier-actions\",\r\n      render: (cell: any, row: any) => {\r\n        return (\r\n          <Space>\r\n            {row.statut === DOSSIER_STATUT.clos ? ( // dossier clos\r\n              // {/* nouveau dossier */}\r\n              <Tooltip title=\"Nouveau dossier\">\r\n                <FaNotesMedical\r\n                  size={24}\r\n                  color={\r\n                    row.statut === DOSSIER_STATUT.decede\r\n                      ? GREY_LIGHT\r\n                      : GREEN_DARK\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={async (data) => {\r\n                    if (row.statut === DOSSIER_STATUT.decede) {\r\n                      // patient decede\r\n                      notification.info({\r\n                        message: \"Info\",\r\n                        description:\r\n                          \"Ce patient est décéde. Impossible de creer un nouveau dossier.\",\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            ) : row.statut === DOSSIER_STATUT.anamnese ? (\r\n              // instance de dossier ouvert mais en attente de traitement\r\n              // {/*prendre le dossier en traitement*/}\r\n              <Tooltip title=\"Traiter le dossier\">\r\n                <FaArrowAltCircleRight\r\n                  size={24}\r\n                  color={\r\n                    row.statut === DOSSIER_STATUT.decede\r\n                      ? GREY_LIGHT\r\n                      : GREEN_DARK\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setSelectedDossier?.(row);\r\n                    setTraiterDossier?.(true);\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            ) : (\r\n              <Tooltip title=\"Editer le dossier\">\r\n                <FaEdit\r\n                  size={24}\r\n                  color={\r\n                    row.statut === DOSSIER_STATUT.decede\r\n                      ? GREY_LIGHT\r\n                      : GREEN_DARK\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    if (row.statut === DOSSIER_STATUT.decede) {\r\n                      // patient decede\r\n                      notification.warning({\r\n                        message: \"Info\",\r\n                        description:\r\n                          \"Ce patient est décéde. Impossible d'editer le dossier ou d'en creer un nouveau.\",\r\n                      });\r\n                    } else {\r\n                      router.push({\r\n                        pathname: ROUTES.REGISTRE_PAGE.ADD_DOSSIER,\r\n                        state: {\r\n                          dossier: row,\r\n                          readOnly: false,\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            {/* transférer le dossier */}\r\n            <Tooltip title=\"Transférer le dossier\">\r\n              <FaExchangeAlt\r\n                size={24}\r\n                color={\r\n                  row.statut === DOSSIER_STATUT.decede ||\r\n                  row.statut === DOSSIER_STATUT.clos ||\r\n                  row.statut === DOSSIER_STATUT.anamnese\r\n                    ? GREY_LIGHT\r\n                    : BS_BLUE\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  if (row.patient.statut === 2) {\r\n                    // patient decede\r\n                    notification.warning({\r\n                      message: \"Info\",\r\n                      description:\r\n                        \"Ce patient est décéde. Impossible de creer un nouveau dossier.\",\r\n                    });\r\n                  }\r\n                }}\r\n              />\r\n            </Tooltip>\r\n            {/* editer les documents */}\r\n            <Tooltip title=\"Editer les documents\">\r\n              <FaPenAlt\r\n                size={24}\r\n                color={\r\n                  row.statut === DOSSIER_STATUT.decede\r\n                    ? GREY_LIGHT\r\n                    : YELLOW_DARK\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => console.log(\"open patient form modal\")}\r\n              />\r\n            </Tooltip>\r\n            {/* consulter le dossier complet */}\r\n            <Tooltip title=\"Dossier complet\">\r\n              <FaInfoCircle\r\n                size={24}\r\n                color=\"#FF4D4F\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  // render medical record in pdf file\r\n                  notification.info({\r\n                    message: \"To do\",\r\n                    description: \"Print medical record as file\",\r\n                  });\r\n                  router.push({\r\n                    pathname: ROUTES.REGISTRE_PAGE.SHOW_DOSSIER,\r\n                    state: {\r\n                      dossier: row,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n};\r\n","import {\r\n  DatePicker,\r\n  Form,\r\n  Select,\r\n  SelectProps,\r\n  Space,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createDossier,\r\n  fetchDossier,\r\n  fetchOrganisme,\r\n  fetchPatients,\r\n  updateDossier,\r\n} from \"../../network\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../shared/rubrique\";\r\nimport { OrganismeEntity } from \"../../../../entities/organisme.entity\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport { formRules } from \"../../../../shared/formRules\";\r\nimport { InputLayout } from \"../../../shared/Layouts\";\r\n\r\n// selectionner le patient ou creer un nouveau patient\r\nexport const DossierAjout = ({\r\n  closeModal,\r\n  dossier,\r\n  formationSanitaire,\r\n}: {\r\n  closeModal?: () => void;\r\n  dossier?: any;\r\n  formationSanitaire?: any;\r\n}) => {\r\n  const router = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [patients, setPatients] = useState<any>([]);\r\n  const [formationSanitaires, setFormationSanitaires] = useState<\r\n    OrganismeEntity[]\r\n  >([]);\r\n  const [reloadData, setReloadData] = useState(true);\r\n  const [isLoadingData, setIsLoadingData] = useState(true);\r\n  const [selectedPatient, setSelectedPatient] = useState<any>();\r\n  const [selectedFormationSanitaire, setSelectedFormationSanitaire] =\r\n    useState<OrganismeEntity>();\r\n  const optionsPT: SelectProps[\"options\"] = [];\r\n  const optionsFS: SelectProps[\"options\"] = [];\r\n\r\n  console.log(\"patient selectionné dans DossierAjout: \", dossier);\r\n\r\n  useEffect(() => {\r\n    form.resetFields();\r\n    if (reloadData) {\r\n      fetchPatients().then((data: any) => {\r\n        if (data.success) {\r\n          setPatients(data.result);\r\n          setReloadData(false);\r\n        }\r\n      });\r\n    }\r\n    fetchOrganisme().then((data) => {\r\n      if (data.success) {\r\n        setFormationSanitaires(\r\n          data.result.filter(\r\n            (elt) => elt.type_organisme === CODE_RUBRIQUES.FORMATION_SANITAIRE\r\n          )\r\n        );\r\n        setIsLoadingData(false);\r\n      }\r\n    });\r\n\r\n    if (dossier) form.setFieldValue(\"patient\", dossier.patient.id);\r\n  }, [dossier, form, reloadData]);\r\n\r\n  console.log(\"ajout dossier pour patient : \", patients);\r\n\r\n  const handlePatientChange = (patientId: any) => {\r\n    setSelectedPatient(\r\n      patients.find((patient: any) => patient.id === patientId)\r\n    );\r\n  };\r\n\r\n  const handleFSChange = (organismeId: any) => {\r\n    setSelectedFormationSanitaire(\r\n      formationSanitaires.find((organisme) => organisme.id === organismeId)\r\n    );\r\n  };\r\n\r\n  patients.map((i: any) => {\r\n    optionsPT.push({\r\n      value: i.id,\r\n      label: i.nom + \"  \" + i.prenom,\r\n    });\r\n  });\r\n\r\n  formationSanitaires.map((i) => {\r\n    optionsFS.push({\r\n      value: i.id,\r\n      label: i.designation,\r\n    });\r\n  });\r\n\r\n  const SelectPatient = (\r\n    <Select\r\n      showSearch\r\n      placeholder=\"\"\r\n      optionFilterProp=\"children\"\r\n      defaultActiveFirstOption\r\n      filterOption={(input: any, option: any) =>\r\n        (option?.label ?? \"\").toLowerCase().includes(input)\r\n      }\r\n      filterSort={(optionA: any, optionB: any) =>\r\n        (optionA?.label ?? \"\")\r\n          .toLowerCase()\r\n          .localeCompare((optionB?.label ?? \"\").toLowerCase())\r\n      }\r\n      options={optionsPT}\r\n      className=\"col-12\"\r\n      onChange={handlePatientChange}\r\n      disabled={dossier ? true : false}\r\n    />\r\n  );\r\n\r\n  const SelectFormationSanitaire = (\r\n    <Select\r\n      showSearch\r\n      placeholder=\"\"\r\n      optionFilterProp=\"children\"\r\n      defaultActiveFirstOption\r\n      filterOption={(input: any, option: any) =>\r\n        (option?.label ?? \"\").toLowerCase().includes(input)\r\n      }\r\n      filterSort={(optionA: any, optionB: any) =>\r\n        (optionA?.label ?? \"\")\r\n          .toLowerCase()\r\n          .localeCompare((optionB?.label ?? \"\").toLowerCase())\r\n      }\r\n      options={optionsFS}\r\n      className=\"col-12\"\r\n      onChange={handleFSChange}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Spin spinning={isLoading}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-5 ms-auto mb-3\">\r\n          {/* <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary rounded-pill\"\r\n          name=\"init-dossier-btn-submit\"\r\n          onClick={() => router.push(ROUTES.PATIENT_PAGE.ADD_PATIENT)}\r\n        >\r\n          Ajouter un patient\r\n        </button> */}\r\n        </div>\r\n        <Form\r\n          key={\"init-dossier-form\"}\r\n          form={form}\r\n          name=\"init-dossier-form\"\r\n          labelCol={{ span: 8 }}\r\n          className=\"row mt-3\"\r\n          onFinish={async (data) => {\r\n            if (!dossier) {\r\n              setIsLoading(true);\r\n              let dossierToCreate = {\r\n                patient: selectedPatient?.id,\r\n                dateEntree: data?.dateEntree.toLocaleString(),\r\n                dateSortie: null, // le dossier n'a pas encore été fermée\r\n                statut: DOSSIER_STATUT.motif, // ouvert\r\n                visibilite: true, // dossier non top secret\r\n                transfert: false,\r\n                transfertNb: 0,\r\n                puffer: false,\r\n                pufferNb: 0,\r\n                formation_sanitaire: selectedFormationSanitaire?.id,\r\n                disabled: 0,\r\n                lastUpdate: new Date().toLocaleString(),\r\n                praticien: \"04545\", // identifiant du praticien connecté\r\n              };\r\n              console.log(\"dossier à creer \", dossierToCreate, selectedPatient);\r\n              await createDossier(dossierToCreate)\r\n                .then(async (data) => {\r\n                  if (data.success) {\r\n                    notification.success({\r\n                      message: \"Succès\",\r\n                      description: data.message,\r\n                    });\r\n                    await fetchDossier(data.result as any).then(\r\n                      (newDossierData: any) => {\r\n                        setIsLoading(false);\r\n                        console.log(\"get new dossier \", newDossierData);\r\n                        if (newDossierData.success) {\r\n                          router.push({\r\n                            pathname: ROUTES.REGISTRE_PAGE.ADD_DOSSIER,\r\n                            state: {\r\n                              dossier: newDossierData.result, // contient l'identifiant de l'element qui vient d'etre créé\r\n                              readOnly: false,\r\n                            },\r\n                          });\r\n                        }\r\n                      }\r\n                    );\r\n                  } else {\r\n                    setIsLoading(false);\r\n                    notification.error({\r\n                      message: \"Erreur\",\r\n                      description: data.message,\r\n                    });\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  setIsLoading(false);\r\n                  notification.error({\r\n                    message: \"Erreur\",\r\n                    description: error.message,\r\n                  });\r\n                });\r\n            } else {\r\n              // medecin traitant\r\n              setIsLoading(true);\r\n              console.log(\r\n                \"mettre à jour les informations du medecin traitant pour le dossier selectionné\"\r\n              );\r\n              let dossierToUpdate = {\r\n                step: \"2\",\r\n                statut: DOSSIER_STATUT.consultation1, // premiere étape du traitement\r\n                praticien: \"0007\", //--> medecinTraitant : id du medecin connecté\r\n                // fs_traitement: selectedFormationSanitaire?.id, // fs selectionnée par le medecin connecté\r\n                // date_deb_traitement: data?.date_deb_traitement.toLocaleString(),\r\n                lastUpdate: new Date().toLocaleString(),\r\n              };\r\n              await updateDossier(dossier.id, dossierToUpdate).then((data) => {\r\n                if (data.success) {\r\n                  setIsLoading(false);\r\n                  notification.success({\r\n                    message: \"Succes\",\r\n                    description: \"Dossier passé en phase de traitement.\",\r\n                  });\r\n                  router.push(ROUTES.REGISTRE_PAGE.PRINCIPAL);\r\n                } else {\r\n                  setIsLoading(false);\r\n                  notification.error({\r\n                    message: \"Erreur\",\r\n                    description: data.message,\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          {dossier ? (\r\n            <InputLayout\r\n              label=\"Medecin traitant\"\r\n              key={\"get-medecin-form\"}\r\n              name={\"medecin_traitant\"}\r\n              rules={[formRules.ruleNoRequired]}\r\n              disabled={true}\r\n            />\r\n          ) : (\r\n            <InputLayout\r\n              label=\"Medecin\"\r\n              key={\"get-medecin-form\"}\r\n              name={\"medecin_anamnese\"}\r\n              rules={[formRules.ruleNoRequired]}\r\n              disabled={true}\r\n            />\r\n          )}\r\n          <Form.Item\r\n            label=\"Patient\"\r\n            key={\"get-patient-form\"}\r\n            name={\"patient\"}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Veuillez remplir ce champ\",\r\n              },\r\n            ]}\r\n          >\r\n            {SelectPatient}\r\n          </Form.Item>\r\n          <Form.Item\r\n            key={\"get-fs-form\"}\r\n            label=\"Formation sanitaire\"\r\n            name={dossier ? \"fs_traitant\" : \"formation_sanitaire\"}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Veuillez completer ce champ\",\r\n              },\r\n            ]}\r\n          >\r\n            {SelectFormationSanitaire}\r\n          </Form.Item>\r\n          <Form.Item\r\n            key={\"get-date-form\"}\r\n            label=\"Recu le \"\r\n            name={\"date_deb_traitement\"}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Veuillez completer ce champ\",\r\n              },\r\n            ]}\r\n          >\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Space className=\"ms-auto col-md-8 mt-5\">\r\n            <button\r\n              name=\"init-dossier-btn-cancel\"\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary rounded-pill\"\r\n              onClick={() => {\r\n                closeModal?.();\r\n              }}\r\n            >\r\n              Annuler\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary rounded-pill\"\r\n              name=\"init-dossier-btn-submit\"\r\n            >\r\n              {dossier ? \"Traiter le dossier\" : \"Créer le dossier\"}\r\n            </button>\r\n          </Space>\r\n        </Form>\r\n      </div>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Alert, Checkbox, Modal, Space } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { DataTable } from \"../../../shared/Table\";\r\nimport styled from \"@emotion/styled\";\r\nimport { DossierEntity } from \"../../../../entities/dossier.entity\";\r\nimport { ButtonWithModal } from \"../../../shared/ButtonWithModal\";\r\nimport { FaPlus, FaSearch } from \"react-icons/fa\";\r\nimport { DOSSIER_COLUMNS } from \"../../../../entities/dossier.entity\";\r\nimport { DossierAjout } from \"./DossierAjout\";\r\nimport { fetchDossier } from \"../../network\";\r\nimport {\r\n  DOSSIER_PC_MODE_TABS,\r\n  DOSSIER_STATUT,\r\n} from \"../../../../shared/rubrique\";\r\nimport { LegendItem } from \"../../../shared/Layouts\";\r\nimport { BS_BLUE } from \"../../../../shared/colors\";\r\n\r\nconst Container = styled.div``;\r\n\r\nexport const loadData = async (\r\n  setIsLoading: (val: boolean) => void,\r\n  setDossiers: (val: any) => void\r\n) => {\r\n  setIsLoading(true);\r\n  <Alert message=\"processing the request...\" />;\r\n  setIsLoading(false);\r\n};\r\n\r\nexport const DossierListComponent = ({\r\n  praticien,\r\n  formation_sanitaire,\r\n  tampon,\r\n  transfert,\r\n  attente,\r\n  deces,\r\n  selectedPatient,\r\n  title,\r\n  createDossier,\r\n}: {\r\n  praticien?: number | string;\r\n  formation_sanitaire?: number | string;\r\n  tampon?: boolean;\r\n  transfert?: boolean;\r\n  attente?: boolean;\r\n  deces?: boolean;\r\n  selectedPatient?: number | string;\r\n  title?: string;\r\n  createDossier?: boolean;\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(true); //loader des dossiers fetcher\r\n  const [dossierAllData, setAllDossiers] = useState<DossierEntity[]>([]); // tous les dossier\r\n  const [dossierData, setDossiers] = useState<DossierEntity[]>([]); // dossiers filtrés\r\n  const [traiterDossier, setTraiterDossier] = useState(false); // lorsqu'un medecin recupere un dossier\r\n  const [selectedDossier, setSelectedDossier] = useState<any>(); // dossier selectionner pour le traitement\r\n  const [reset, setReset] = useState(false); // effacer le filtre\r\n\r\n  useEffect(() => {\r\n    fetchDossier().then((data) => {\r\n      if (data.success) {\r\n        let dossiers = data.result;\r\n        setAllDossiers(data.result);\r\n        setDossiers(data.result);\r\n        if (selectedPatient) {\r\n          setDossiers(\r\n            dossiers.filter((dos) => dos.patient.id === selectedPatient)\r\n          );\r\n        }\r\n        if (praticien) {\r\n          setDossiers(dossiers.filter((dos) => dos.praticien.id === praticien));\r\n        }\r\n        if (formation_sanitaire) {\r\n          setDossiers(\r\n            dossiers.filter(\r\n              (dos) => dos.formation_sanitaire.id === formation_sanitaire\r\n            )\r\n          );\r\n        }\r\n        if (transfert) {\r\n          setDossiers(dossiers.filter((dos) => dos.transfert === 1));\r\n        }\r\n        if (attente) {\r\n          // dossier en instance de traitement\r\n          setDossiers(\r\n            dossiers.filter((dos) => dos.statut === DOSSIER_STATUT.anamnese)\r\n          );\r\n        }\r\n        if (tampon) {\r\n          setDossiers(dossiers.filter((dos) => dos.puffer === 1));\r\n        }\r\n        if (deces) {\r\n          setDossiers(\r\n            dossiers.filter((dos) => dos.statut === DOSSIER_STATUT.decede)\r\n          );\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, [\r\n    deces,\r\n    formation_sanitaire,\r\n    praticien,\r\n    tampon,\r\n    transfert,\r\n    selectedPatient,\r\n    attente,\r\n  ]);\r\n\r\n  console.log(\"dossiers list \", dossierAllData);\r\n\r\n  return (\r\n    <Container>\r\n      {/* Mettre un filtre sur la période, le statut, filtre à checkbox aussi si possible */}\r\n      <div className=\"row mb-3 accordion-collapse collapse\" id=\"collapseLegend\">\r\n        <div className=\"\" id=\"legend-registre-principal\">\r\n          {/* <h6>Legende</h6> */}\r\n          <Space wrap style={{ fontSize: 11 }} size={\"middle\"}>\r\n            {DOSSIER_PC_MODE_TABS.map((mode) => (\r\n              <LegendItem\r\n                color={mode.color}\r\n                title={mode.title}\r\n                name={mode.name}\r\n              />\r\n            ))}\r\n          </Space>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal\r\n          open={traiterDossier}\r\n          onCancel={() => setTraiterDossier(false)}\r\n          footer={null}\r\n          centered\r\n          title=\"Traiter le dossier\"\r\n        >\r\n          <DossierAjout\r\n            key={\"traiter-dossier-formulaire\"}\r\n            dossier={selectedDossier}\r\n            closeModal={() => setTraiterDossier(false)}\r\n          />\r\n        </Modal>\r\n        <DataTable\r\n          loading={isLoading}\r\n          data={reset ? dossierAllData : dossierData}\r\n          columns={DOSSIER_COLUMNS(\r\n            setIsLoading,\r\n            setDossiers,\r\n            loadData,\r\n            setTraiterDossier,\r\n            setSelectedDossier\r\n          )}\r\n          filterFunction={(dossier: DossierEntity, filterValue: string) =>\r\n            dossier.patient.nom.includes(filterValue) ||\r\n            dossier.patient.prenom.includes(filterValue) ||\r\n            dossier.patient.nom.toLowerCase().includes(filterValue) ||\r\n            dossier.patient.prenom.toLowerCase().includes(filterValue)\r\n          }\r\n          buttons={\r\n            <Space className=\"ms-auto\" size={\"large\"}>\r\n              <i>\r\n                <FaSearch color={BS_BLUE} />\r\n              </i>\r\n              <Checkbox\r\n                name=\"registre-reset\"\r\n                className=\"ml-3\"\r\n                checked={reset}\r\n                onChange={(e) => setReset(e.target.checked)}\r\n              >\r\n                Afficher tout\r\n              </Checkbox>\r\n              <Checkbox\r\n                name=\"registre-legend\"\r\n                className=\"ml-3\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseLegend\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseLegend\"\r\n              >\r\n                Legende\r\n              </Checkbox>\r\n              <div>\r\n                {createDossier ? (\r\n                  <ButtonWithModal\r\n                    buttonText=\"Nouveau dossier\"\r\n                    buttonProps={{\r\n                      style: {\r\n                        backgroundColor: \"lightgreen\",\r\n                        borderWidth: 0,\r\n                        borderRadius: 15,\r\n                      },\r\n                      icon: (\r\n                        <FaPlus\r\n                          style={{ marginRight: 5, marginBottom: 2 }}\r\n                          size={20}\r\n                        />\r\n                      ),\r\n                    }}\r\n                    modalProps={{ title: `Création d'un dossier` }}\r\n                  >\r\n                    {(closeModal) => (\r\n                      <DossierAjout\r\n                        key={\"dossier-ajout-form\"}\r\n                        closeModal={closeModal}\r\n                      />\r\n                    )}\r\n                  </ButtonWithModal>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </Space>\r\n          }\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierListComponent } from \"../../components/dossier/DossierList\";\r\n\r\nexport const RegistrePrincipalPage = () => {\r\n  const router = useHistory();\r\n  const state = router.location.state ? (router.location.state as any) : null;\r\n\r\n  return (\r\n    <AdminContainer clicked=\"registre-all\">\r\n      <h2>Registre principal </h2> <hr />\r\n      <DossierListComponent\r\n        selectedPatient={state?.patient}\r\n        key={\"list-all\"}\r\n        createDossier={true}\r\n      />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierListComponent } from \"../../components/dossier/DossierList\";\r\n\r\nexport const RegistreTraitementPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"registre-traitement\">\r\n      <h2> Registre des instances de traitement </h2>\r\n      <DossierListComponent\r\n        key={\"list-traitement\"}\r\n        attente={true}\r\n        title=\"Registre des instances de traitement\"\r\n      />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierListComponent } from \"../../components/dossier/DossierList\";\r\n\r\nexport const RegistreTamponPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"registre-tampon\">\r\n      <h2>Registre tampon</h2>\r\n      <hr />\r\n      <DossierListComponent\r\n        key={\"list-tampon\"}\r\n        tampon={true}\r\n        title=\"Registre tampon\"\r\n      />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import {\r\n  FaNotesMedical,\r\n  FaUserInjured,\r\n  FaUserNurse,\r\n  FaMailBulk,\r\n  FaSpeakerDeck,\r\n  FaBookDead,\r\n} from \"react-icons/fa\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport {\r\n  GREEN_DARK,\r\n  BS_WARNING,\r\n  BS_BLUE,\r\n  ORANGE_DARK,\r\n} from \"../../../../shared/colors\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierListComponent } from \"../../components/dossier/DossierList\";\r\nimport { Space, Badge } from \"antd\";\r\nimport { MiniCard } from \"../../../shared/CustomCard\";\r\n\r\nexport const RegistreDecesPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"registre-deces\">\r\n      <div className=\"row mb-0 pb-0 align-items-center justify-content-center\">\r\n        <h2 className=\"col-md-4 mt-auto\"> Registre des deces </h2>\r\n        <div className=\"col-md-6 ms-auto\">\r\n          <Space>\r\n            {DecesCardsDashboard.map((card) => (\r\n              <MiniCard card={card} />\r\n            ))}\r\n          </Space>\r\n        </div>\r\n        <hr className=\"mb-2\" />\r\n      </div>\r\n\r\n      <DossierListComponent\r\n        deces={true}\r\n        key={\"list-deces\"}\r\n        title=\"Registre des deces\"\r\n      />\r\n    </AdminContainer>\r\n  );\r\n};\r\n\r\nconst DecesCardsDashboard = [\r\n  {\r\n    title: \"Patients\",\r\n    description: \"Patients\",\r\n    value: 145,\r\n    color: BS_WARNING,\r\n    icon: <FaUserInjured size={48} color={BS_WARNING} />,\r\n    link: ROUTES.PATIENT_PAGE.LIST_PATIENT,\r\n  },\r\n  {\r\n    title: \"Medecins\",\r\n    description: \"Medecins\",\r\n    value: 25,\r\n    color: BS_BLUE,\r\n    icon: <FaUserNurse size={48} color={BS_BLUE} />,\r\n    link: \"/admin/users/list\",\r\n  },\r\n  {\r\n    title: \"Deces\",\r\n    description: \" Deces \",\r\n    value: \"1,7 M\",\r\n    color: ORANGE_DARK,\r\n    icon: <FaBookDead size={48} color=\"red\" />,\r\n    link: \"/admin/analyse/demandes/list\",\r\n  },\r\n];\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\n\r\nexport const NouvelleAnalyse = () => {\r\n  return (\r\n    <AdminContainer clicked=\"analyse-new\">\r\n      <h2> Nouvelle analyse </h2>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\n\r\nexport const AnalyseDemandePage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"analyse-demande-new\">\r\n      <h2> Nouvelle demande de statistiques </h2>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\n\r\nexport const AnalyseListDemandePage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"analyse-demande-list\">\r\n      <h2> Liste des demandes de statistiques </h2>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\n\r\nexport const AnalyseHistoriquePage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"analyse-historique\">\r\n      <h2> Historique des analyses </h2>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\n\r\nexport const ParametresDonneesPage = () => {\r\n  return (\r\n    <AdminContainer clicked=\"parametres-donnees\">\r\n      <h2> Configuration des données de base </h2>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { AdminContainer } from \"../../components/AdminContainer\";\r\n\r\nexport const ParametresConfig = () => {\r\n  return (\r\n    <AdminContainer clicked=\"parametres-configuration\">\r\n      <h2> Configuration génerale de l'application </h2>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { PatientForm } from \"../../components/Patients/PatientForm\";\r\nimport { ROUTES } from \"../../../../routes\";\r\n\r\nexport const ShowPatientPage = () => {\r\n  const router = useHistory();\r\n  const state = router.location.state ? (router.location.state as any) : null;\r\n\r\n  return (\r\n    <AdminContainer clicked=\"patients-list\">\r\n      <h2>\r\n        <Link to={ROUTES.PATIENT_PAGE.LIST_PATIENT}>Liste des patients</Link> |\r\n        Patient 000Y00 <span className=\"text-primary\">{state?.patient.id}</span>\r\n      </h2>\r\n      <div className=\"card mt-0\">\r\n        <div className=\"card-body\">\r\n          <PatientForm patient={state?.patient} readOnly={state?.readOnly} />\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Button, Form, Space, Spin, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  RubriqueNavigate,\r\n  InputLayout,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { completeDossier } from \"../../../network\";\r\nimport { FaImage } from \"react-icons/fa\";\r\nimport { LIGHT_PRIMARY } from \"../../../../../shared/colors\";\r\nimport { ButtonWithModal } from \"../../../../shared/ButtonWithModal\";\r\nimport { formRules } from \"../../../../../shared/formRules\";\r\nimport { getPayload } from \"../DossierDetails\";\r\n\r\nexport const FormDiagnostic = ({\r\n  dossier,\r\n  eltDossiers,\r\n  activeKey,\r\n  setActiveKey,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltDossiers: any;\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name=\"acq-diagnostic-form\"\r\n        key=\"acq-diagnostic-form\"\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.diagnostic ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id=\"acq-diagnostic\"\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n          let dataToSend: any = {\r\n            dossierId: dossier.id,\r\n            statut: DOSSIER_STATUT.score, // motif de la consultation <==> anamnese\r\n            step: \"1\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DIAGNOSTIC_CLASS_AO,\r\n                valeur: [data.diag_class_ao],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DIAGNOSTIC_LESSION_1,\r\n                valeur: [data.diag_lessions_ass1],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DIAGNOSTIC_LESSION_2,\r\n                valeur: [data.diag_lessions_ass2],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DIAGNOSTIC_LESSION_3,\r\n                valeur: [data.diag_lessions_ass1],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n          };\r\n          await completeDossier(dataToSend).then(async (data) => {\r\n            if (data.success) {\r\n              notification.success({\r\n                message: \"Succès\",\r\n                description: data.message,\r\n              });\r\n              reloadData(true);\r\n              setActiveKey(DOSSIER_STATUT.score);\r\n            } else {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: data.message,\r\n              });\r\n              // set check icon to danger (non enregistré)\r\n            }\r\n          });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key=\"dossier-acq-diagnostic\"\r\n            title=\"Diagnostic des lesions musculosquelettiques - ICD 10\"\r\n          />\r\n          <div>\r\n            <div className=\"row\" id=\"classification-ao\">\r\n              <InputLayout\r\n                label=\"Classification AO\"\r\n                multiple={true}\r\n                name=\"diag_class_ao\"\r\n                key=\"diag_class_ao\"\r\n                className=\"col-md-8\"\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.diagnostic,\r\n                  CODE_RUBRIQUES.DIAGNOSTIC_CLASS_AO,\r\n                  false\r\n                )}\r\n                disabled={\r\n                  dossier.statut > DOSSIER_STATUT.diagnostic ? true : false\r\n                }\r\n              />\r\n              {/* Inserer un poster de la classification AO */}\r\n              <div className=\"col-md-4\">\r\n                <ButtonWithModal\r\n                  buttonText={\r\n                    <div className=\"\">\r\n                      <small className=\"col\">Insérer un poster</small>{\" \"}\r\n                      <FaImage size={28} color={LIGHT_PRIMARY} />\r\n                    </div>\r\n                  }\r\n                  buttonProps={{\r\n                    danger: false,\r\n                    className: \"mx-auto\",\r\n                  }}\r\n                  modalProps={{ title: \"\" }}\r\n                >\r\n                  {(closeModal) => (\r\n                    <div>\r\n                      <h3>Insérer AO COIAC</h3>\r\n                      <div className=\"card\"></div>\r\n                      <Space>\r\n                        <Button type=\"primary\" onClick={() => closeModal()}>\r\n                          Fermer\r\n                        </Button>\r\n                        <Button\r\n                          danger\r\n                          onClick={() => {\r\n                            notification.success({\r\n                              message: \"Succès\",\r\n                              description: \"Laisse l'enseignement passé\",\r\n                            });\r\n                          }}\r\n                        >\r\n                          Oui\r\n                        </Button>\r\n                      </Space>\r\n                    </div>\r\n                  )}\r\n                </ButtonWithModal>\r\n              </div>\r\n            </div>\r\n            <InputLayout\r\n              label=\"Lesions associées 1 - ICD 10\"\r\n              name=\"diag_lessions_ass1\"\r\n              key=\"diag_lessions_ass1\"\r\n              className=\"col-md-8\"\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.diagnostic,\r\n                CODE_RUBRIQUES.DIAGNOSTIC_LESSION_1,\r\n                false\r\n              )}\r\n              disabled={\r\n                dossier.statut > DOSSIER_STATUT.diagnostic ? true : false\r\n              }\r\n            />\r\n            <InputLayout\r\n              label=\"Lesions associées 2 - ICD 10\"\r\n              name=\"diag_lessions_ass2\"\r\n              key=\"diag_lessions_ass2\"\r\n              className=\"col-md-8\"\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.diagnostic,\r\n                CODE_RUBRIQUES.DIAGNOSTIC_LESSION_2,\r\n                false\r\n              )}\r\n              disabled={\r\n                dossier.statut > DOSSIER_STATUT.diagnostic ? true : false\r\n              }\r\n            />\r\n            <InputLayout\r\n              label=\"Lesions associées 3 - ICD 10\"\r\n              name=\"diag_lessions_ass3\"\r\n              key=\"diag_lessions_ass3\"\r\n              className=\"col-md-8\"\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.diagnostic,\r\n                CODE_RUBRIQUES.DIAGNOSTIC_LESSION_3,\r\n                false\r\n              )}\r\n              disabled={\r\n                dossier.statut > DOSSIER_STATUT.diagnostic ? true : false\r\n              }\r\n            />\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.motif ? (\r\n            <Space className=\"ms-auto\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary ml-3 rounded-pill\"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.examen)}\r\n              >\r\n                Precedent\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary ml-3 rounded-pill\"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.score)}\r\n              >\r\n                Suivant\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-diagnostic\" />\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Form, Space, Spin, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  FullSelectLayout,\r\n  RubriqueNavigate,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { completeDossier } from \"../../../network\";\r\n\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { formRules } from \"../../../../../shared/formRules\";\r\nimport { getPayload } from \"../DossierDetails\";\r\n\r\nexport const FormEnquete = ({\r\n  dossier,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name=\"acq-enquete-form\"\r\n        key=\"acq-enquete-form\"\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.enquete ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id=\"acq-enquete\"\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n          let dataToSend: any = {\r\n            dossierId: dossier.id,\r\n            statut: DOSSIER_STATUT.examen, // motif de la consultation <==> anamnese\r\n            step: \"1\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_GENERAL,\r\n                valeur: [data.enq_general],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_LOCOMOTEUR,\r\n                valeur: [data.enq_app_locomoteur],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_NERVEUX,\r\n                valeur: [data.enq_sys_nerveux],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_RESPIRATOIRE,\r\n                valeur: [data.enq_app_respiratoire],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_CARDIO,\r\n                valeur: [data.enq_app_cardio],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_DIGESTIF,\r\n                valeur: [data.enq_app_digestif],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.ENQUETE_UROGENITAL,\r\n                valeur: [data.enq_app_génital],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n          };\r\n          await completeDossier(dataToSend).then(async (data) => {\r\n            if (data.success) {\r\n              notification.success({\r\n                message: \"Succès\",\r\n                description: data.message,\r\n              });\r\n              reloadData(true);\r\n              setActiveKey(DOSSIER_STATUT.examen);\r\n            } else {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: data.message,\r\n              });\r\n            }\r\n          });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key=\"dossier-acq-enquete\"\r\n            title=\"Enquête des systèmes\"\r\n          />\r\n          <div>\r\n            <FullSelectLayout\r\n              label=\"Géneral\"\r\n              name=\"enq_general\"\r\n              key=\"enq_general\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_GENERAL\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_GENERAL,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Appareil locomoteur\"\r\n              name=\"enq_app_locomoteur\"\r\n              key=\"enq_app_locomoteur\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_LOCOMOTEUR\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_LOCOMOTEUR,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Sytème nerveux central et périphérique\"\r\n              name=\"enq_sys_nerveux\"\r\n              key=\"enq_sys_nerveux\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_NERVEUX\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_NERVEUX,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Appareil respiratoire\"\r\n              name=\"enq_app_respiratoire\"\r\n              key=\"enq_app_respiratoire\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_RESPIRATOIRE\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_RESPIRATOIRE,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Appareil cardio-vasculaire\"\r\n              name=\"enq_app_cardio\"\r\n              key=\"enq_app_cardio\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_CARDIO\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_CARDIO,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Appareil digestif\"\r\n              name=\"enq_app_digestif\"\r\n              key=\"enq_app_digestif\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_DIGESTIF\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_DIGESTIF,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Appareil uro-génital\"\r\n              name=\"enq_app_génital\"\r\n              key=\"enq_app_génital\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.ENQUETE_UROGENITAL\r\n              )}\r\n              size={12}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.enquete,\r\n                CODE_RUBRIQUES.ENQUETE_UROGENITAL,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.enquete ? true : false}\r\n            />\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.enquete ? (\r\n            <Space className=\"ms-auto\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary ml-3 rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.histoire)}\r\n              >\r\n                Precedent\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary ml-3 rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.examen)}\r\n              >\r\n                Suivant\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-enquete\" />\r\n          )}{\" \"}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Button, Form, Space, Spin, Upload, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  FullSelectLayout,\r\n  RubriqueNavigate,\r\n  InputLayout,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { completeDossier } from \"../../../network\";\r\n\r\nimport { FaImage, FaPlus } from \"react-icons/fa\";\r\nimport { PRIMARY } from \"../../../../../shared/colors\";\r\nimport { ButtonWithModal } from \"../../../../shared/ButtonWithModal\";\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { formRules } from \"../../../../../shared/formRules\";\r\nimport { getPayload } from \"../DossierDetails\";\r\n\r\nexport const FormExamen = ({\r\n  dossier,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n\r\n  const normFile = (e: any) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e?.fileList;\r\n  };\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name=\"acq-examen-form\"\r\n        key=\"acq-examen-form\"\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.examen ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id=\"acq-examen\"\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n          let dataToSend: any = {\r\n            dossierId: dossier.id,\r\n            statut: DOSSIER_STATUT.diagnostic, // motif de la consultation <==> anamnese\r\n            step: \"1\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_TA,\r\n                valeur: [data.par_ta],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_POULS,\r\n                valeur: [data.par_pouls],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_FR,\r\n                valeur: [data.par_fr],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_T,\r\n                valeur: [data.par_t],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_GENERAL,\r\n                valeur: [data.exa_gen],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.LUXATION_CLINIQUE,\r\n                valeur: data.lux_cli.length === 0 ? [\"0000000\"] : data.lux_cli,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.FRACTURE_CLINIQUE,\r\n                valeur: data.fra_cli.length === 0 ? [\"0000000\"] : data.fra_cli,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.TYPE_FRACTURE,\r\n                valeur: data.typ_fra.length === 0 ? [\"0000000\"] : data.typ_fra,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.TYPE_FRACTURE_PEDIATRIE,\r\n                valeur:\r\n                  data.typ_frac_ped.length === 0\r\n                    ? [\"0000000\"]\r\n                    : data.typ_frac_ped,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.COLORATION_MEMBRE,\r\n                valeur: [data.exa_col],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.POULS_PERIPHERIQUE,\r\n                valeur: [data.exa_pouls_per],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.TEMPERATURE_MEMBRE,\r\n                valeur: [data.exa_temp_mem],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SENSIBILITE,\r\n                valeur: [data.exa_sens],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_APP_DIGESTIF,\r\n                valeur: [data.exa_app_dig],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_APP_UROGENITAL,\r\n                valeur: [data.exa_app_uro],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_APP_CARDIO,\r\n                valeur: [data.exa_app_cardio],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_APP_NEURO,\r\n                valeur: [data.exa_app_neuro],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.EXAMEN_RADIO_INITIALES,\r\n                valeur:\r\n                  data.exa_rad_ini.length === 0\r\n                    ? [\"0000000\"]\r\n                    : data.exa_rad_ini,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n          };\r\n          console.log(\"data to send in examen \", dataToSend);\r\n          await completeDossier(dataToSend).then(async (data) => {\r\n            if (data.success) {\r\n              notification.success({\r\n                message: \"Succès\",\r\n                description: data.message,\r\n              });\r\n              reloadData(true);\r\n              setActiveKey(DOSSIER_STATUT.diagnostic);\r\n            } else {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: data.message,\r\n              });\r\n            }\r\n          });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle key=\"dossier-acq-examen\" title=\"Examen physique\" />\r\n          <div>\r\n            {/* PARAMETRES */}\r\n            <div className=\"row\" id=\"exa_parametres\">\r\n              <strong>\r\n                <h5\r\n                  style={{ fontFamily: \"monospace\" }}\r\n                  className=\"text-primary\"\r\n                >\r\n                  Paramètres\r\n                </h5>{\" \"}\r\n                <hr />\r\n              </strong>\r\n              <InputLayout\r\n                label=\"TA\"\r\n                name=\"par_ta\"\r\n                key=\"par_ta\"\r\n                className=\"col-md-3 mr-0\"\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_TA,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <InputLayout\r\n                label=\"Pouls\"\r\n                name=\"par_pouls\"\r\n                key=\"par_pouls\"\r\n                className=\"col-md-3\"\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_POULS,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <InputLayout\r\n                label=\"FR\"\r\n                size={12}\r\n                name=\"par_fr\"\r\n                key=\"par_fr\"\r\n                className=\"col-md-3\"\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_FR,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <InputLayout\r\n                label=\"T°\"\r\n                size={12}\r\n                name=\"par_t\"\r\n                key=\"par_t\"\r\n                className=\"col-md-3\"\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_T,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n            </div>\r\n            <div>\r\n              <FullSelectLayout\r\n                label=\"Examen Géneral / Extremité céphalique \"\r\n                key=\"exa_gen\"\r\n                name=\"exa_gen\"\r\n                size={12}\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.EXAMEN_GENERAL\r\n                )}\r\n                multiple={true}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_GENERAL,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n            </div>\r\n            {/* APPAREIL LOCOMOTEUR */}\r\n            <div className=\"row\" id=\"exa_app-loc\">\r\n              <strong>\r\n                <h5\r\n                  style={{ fontFamily: \"monospace\" }}\r\n                  className=\"text-primary\"\r\n                >\r\n                  Appareil locomoteur\r\n                </h5>{\" \"}\r\n                <hr />\r\n              </strong>\r\n              <FullSelectLayout\r\n                multiple={true}\r\n                label=\"Luxation clinique de \"\r\n                key=\"lux_cli\"\r\n                name=\"lux_cli\"\r\n                size={12}\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.LUXATION_CLINIQUE\r\n                )}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.LUXATION_CLINIQUE,\r\n                  true\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <FullSelectLayout\r\n                multiple={true}\r\n                label=\"Fracture clinique de \"\r\n                key=\"fra_cli\"\r\n                name=\"fra_cli\"\r\n                size={12}\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.FRACTURE_CLINIQUE\r\n                )}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.FRACTURE_CLINIQUE,\r\n                  true\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <FullSelectLayout\r\n                multiple={true}\r\n                label=\"Type de fracture\"\r\n                key=\"typ_fra\"\r\n                name=\"typ_fra\"\r\n                size={12}\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.TYPE_FRACTURE\r\n                )}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.TYPE_FRACTURE,\r\n                  true\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <FullSelectLayout\r\n                multiple={true}\r\n                label=\"Type de fracture pédiatrique \"\r\n                key=\"typ_frac_ped\"\r\n                name=\"typ_frac_ped\"\r\n                size={12}\r\n                items={eltRubriques.filter(\r\n                  (elt) =>\r\n                    elt.rubrique === CODE_RUBRIQUES.TYPE_FRACTURE_PEDIATRIE\r\n                )}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.TYPE_FRACTURE_PEDIATRIE,\r\n                  true\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n            </div>\r\n            {/* COLORATION, POULS, TEMPERATURE, SENSIBILITE */}\r\n            <div className=\"row\" id=\"col-pls\">\r\n              <strong>\r\n                <h5\r\n                  style={{ fontFamily: \"monospace\" }}\r\n                  className=\"text-primary\"\r\n                >\r\n                  Autres paramètres\r\n                </h5>\r\n                <hr />\r\n              </strong>\r\n              <FullSelectLayout\r\n                label=\"Coloration périphérique du membre\"\r\n                name=\"exa_col\"\r\n                key=\"exa_col\"\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.COLORATION_MEMBRE\r\n                )}\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.COLORATION_MEMBRE,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <FullSelectLayout\r\n                label=\"Pouls périphériques\"\r\n                name=\"exa_pouls_per\"\r\n                key=\"exa_pouls_per\"\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.POULS_PERIPHERIQUE\r\n                )}\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.POULS_PERIPHERIQUE,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <FullSelectLayout\r\n                label=\"Température du membre\"\r\n                name=\"exa_temp_mem\"\r\n                key=\"exa_temp_mem\"\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.TEMPERATURE_MEMBRE\r\n                )}\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.TEMPERATURE_MEMBRE,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <FullSelectLayout\r\n                label=\"Sensibilité\"\r\n                name=\"exa_sens\"\r\n                key=\"exa_sens\"\r\n                items={eltRubriques.filter(\r\n                  (elt) => elt.rubrique === CODE_RUBRIQUES.SENSIBILITE\r\n                )}\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.SENSIBILITE,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n            </div>\r\n            {/* Autres appareils */}\r\n            <div className=\"row\" id=\"exa_autres\">\r\n              <strong>\r\n                <h5\r\n                  style={{ fontFamily: \"monospace\" }}\r\n                  className=\"text-primary\"\r\n                >\r\n                  Examen des appareils\r\n                </h5>{\" \"}\r\n                <hr />\r\n              </strong>\r\n              <InputLayout\r\n                label=\"Appareil digestif\"\r\n                multiple={true}\r\n                size={12}\r\n                name=\"exa_app_dig\"\r\n                key=\"exa_app_dig\"\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_APP_DIGESTIF,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <InputLayout\r\n                label=\"Appareil Urogénital\"\r\n                multiple={true}\r\n                name=\"exa_app_uro\"\r\n                key=\"exa_app_uro\"\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_APP_UROGENITAL,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <InputLayout\r\n                label=\"Appareil cardio vasculaire\"\r\n                multiple={true}\r\n                name=\"exa_app_cardio\"\r\n                key=\"exa_app_cardio\"\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_APP_CARDIO,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              <InputLayout\r\n                label=\"Examen neurologique\"\r\n                multiple={true}\r\n                name=\"exa_app_neuro\"\r\n                key=\"exa_app_neuro\"\r\n                size={12}\r\n                rules={[formRules.ruleNoRequired]}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_APP_NEURO,\r\n                  false\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <FullSelectLayout\r\n                multiple={true}\r\n                size={12}\r\n                label=\"Radiographies initiales\"\r\n                key=\"exa_rad_ini\"\r\n                name=\"exa_rad_ini\"\r\n                items={eltRubriques.filter(\r\n                  (elt) =>\r\n                    elt.rubrique === CODE_RUBRIQUES.EXAMEN_RADIO_INITIALES\r\n                )}\r\n                value={getPayload(\r\n                  dossier,\r\n                  DOSSIER_STATUT.examen,\r\n                  CODE_RUBRIQUES.EXAMEN_RADIO_INITIALES,\r\n                  true\r\n                )}\r\n                disabled={dossier.statut > DOSSIER_STATUT.examen ? true : false}\r\n              />\r\n              {/* Schéma des fractures */}\r\n              <div className=\"row mt-2\">\r\n                <strong>\r\n                  <h5\r\n                    style={{ fontFamily: \"monospace\" }}\r\n                    className=\"text-primary\"\r\n                  >\r\n                    Schéma des fractures\r\n                  </h5>\r\n                  <hr />\r\n                </strong>\r\n                <label htmlFor=\"shéma-fracture\" className=\"col-md-8\">\r\n                  Schéma des fractures pédiatriques / adultes\r\n                </label>{\" \"}\r\n                {/* Inserer l'image de la radiographie */}\r\n                <div>\r\n                  <Form.Item\r\n                    label=\"Upload\"\r\n                    valuePropName=\"fileList\"\r\n                    getValueFromEvent={normFile}\r\n                  >\r\n                    <Upload action=\"/upload.do\" listType=\"picture-card\">\r\n                      <div>\r\n                        <FaPlus />\r\n                        <div style={{ marginTop: 8 }}>Upload</div>\r\n                      </div>\r\n                    </Upload>\r\n                  </Form.Item>\r\n                  {/* <ButtonWithModal\r\n                    buttonText={\r\n                      <div className=\"\">\r\n                        <small className=\"col\">Charger l'image</small>{\" \"}\r\n                        <FaImage size={28} color={PRIMARY} />\r\n                      </div>\r\n                    }\r\n                    buttonProps={{\r\n                      danger: false,\r\n                      className: \"mx-auto\",\r\n                    }}\r\n                    modalProps={{ title: \"\" }}\r\n                  >\r\n                    {(closeModal) => (\r\n                      <div>\r\n                        <h3>Charger l'image de la radio</h3>\r\n                        <div className=\"card\"></div>\r\n                        <Space>\r\n                          <Button type=\"primary\" onClick={() => closeModal()}>\r\n                            Fermer\r\n                          </Button>\r\n                          <Button\r\n                            danger\r\n                            onClick={() => {\r\n                              notification.success({\r\n                                message: \"Succès\",\r\n                                description: \"Laisse l'enseignement passé\",\r\n                              });\r\n                            }}\r\n                          >\r\n                            Oui\r\n                          </Button>\r\n                        </Space>\r\n                      </div>\r\n                    )}\r\n                  </ButtonWithModal> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.examen ? (\r\n            <Space className=\"ms-auto\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary ml-3 rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.enquete)}\r\n              >\r\n                Precedent\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary ml-3 rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.diagnostic)}\r\n              >\r\n                Suivant\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-examen\" />\r\n          )}{\" \"}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Form, Space, Spin, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  RubriqueNavigate,\r\n  FullSelectLayout,\r\n  InputLayout,\r\n  DateLayout,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { completeDossier } from \"../../../network\";\r\n\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { formRules } from \"../../../../../shared/formRules\";\r\nimport { getPayload } from \"../DossierDetails\";\r\n\r\nexport const FormHistoire = ({\r\n  dossier,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n\r\n  const PREMIERS_SOINS = eltRubriques.filter(\r\n    (elt) => elt.rubrique === CODE_RUBRIQUES.PREMIERS_SOINS\r\n  );\r\n\r\n  const DELAI_FS = eltRubriques.filter(\r\n    (elt) => elt.rubrique === CODE_RUBRIQUES.DELAI_FS\r\n  );\r\n\r\n  const MOYENS_TRANSPORT = eltRubriques.filter(\r\n    (elt) => elt.rubrique === CODE_RUBRIQUES.MOYENS_TRANSPORT\r\n  );\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name=\"acq-histoire-form\"\r\n        key=\"acq-histoire-form\"\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.histoire ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id=\"acq-histoire\"\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n          let dataToSend: any = {\r\n            dossierId: dossier.id,\r\n            statut: DOSSIER_STATUT.enquete,\r\n            step: \"1\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DATE_TRAUMATISME,\r\n                valeur: [new Date(data.hist_date).toLocaleString()],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.PREMIERS_SOINS,\r\n                valeur: [data.hist_premier_soin],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DELAI_FS,\r\n                valeur: [data.hist_delai_fs],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.MOYENS_TRANSPORT,\r\n                valeur: [data.hist_moyen_trans],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n          };\r\n          await completeDossier(dataToSend).then(async (data) => {\r\n            if (data.success) {\r\n              notification.success({\r\n                message: \"Succès\",\r\n                description: data.message,\r\n              });\r\n              reloadData(true);\r\n              setActiveKey(DOSSIER_STATUT.enquete);\r\n            } else {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: data.message,\r\n              });\r\n              // set check icon to danger (non enregistré)\r\n            }\r\n          });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key=\"dossier-acq-histoire\"\r\n            title=\"Histoire de la maladie\"\r\n          />\r\n          <div className=\"row\">\r\n            <DateLayout\r\n              label=\"Date du traumatisme\"\r\n              name=\"hist_date\"\r\n              key=\"hist_date\"\r\n              rules={[formRules.ruleNoRequired]}\r\n              size={7}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.histoire,\r\n                CODE_RUBRIQUES.DATE_TRAUMATISME,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.histoire ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Premiers soins par\"\r\n              name=\"hist_premier_soin\"\r\n              key=\"hist_premier_soin\"\r\n              items={PREMIERS_SOINS}\r\n              size={7}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.histoire,\r\n                CODE_RUBRIQUES.PREMIERS_SOINS,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.histoire ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Délai d'arrivée à la FS\"\r\n              name=\"hist_delai_fs\"\r\n              key=\"hist_delai_fs\"\r\n              items={DELAI_FS}\r\n              size={7}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.histoire,\r\n                CODE_RUBRIQUES.DELAI_FS,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.histoire ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Moyen de transport vers la FS\"\r\n              name=\"hist_moyen_trans\"\r\n              key=\"hist_moyen_trans\"\r\n              items={MOYENS_TRANSPORT}\r\n              size={7}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.histoire,\r\n                CODE_RUBRIQUES.MOYENS_TRANSPORT,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.histoire ? true : false}\r\n            />\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.histoire ? (\r\n            <Space className=\"ms-auto\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary ml-3 rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.motif)}\r\n              >\r\n                Precedent\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.enquete)}\r\n              >\r\n                Suivant\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-histoire\" />\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Form, Space, Spin, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  SwitchLayout,\r\n  RubriqueNavigate,\r\n  FullSelectLayout,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { completeDossier } from \"../../../network\";\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { formRules } from \"../../../../../shared/formRules\";\r\nimport { getPayload } from \"../DossierDetails\";\r\n\r\nexport const FormMotif = ({\r\n  dossier,\r\n  reloadData,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  dossier: any;\r\n  reloadData: (val: boolean) => void;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  // eltDossiers: any; //Dossier entity\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n  const payload = dossier.payload;\r\n\r\n  const TYPE_ACCIDENT = eltRubriques.filter(\r\n    (elt) => elt.rubrique === CODE_RUBRIQUES.TYPE_ACCIDENT\r\n  );\r\n  const MECANISME_TRAUMATISME = eltRubriques.filter(\r\n    (elt) => elt.rubrique === CODE_RUBRIQUES.MECANISME_TRAUMATISME\r\n  );\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name={\"acq-motif-form-\" + dossier.id}\r\n        key={\"acq-motif-form-\" + dossier.id}\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.motif ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id={\"acq-motif-\" + dossier.id}\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n          // let dataToSend: any = form.getFieldsValue();\r\n          let dataToSend: any = {\r\n            dossierId: dossier.id,\r\n            statut: DOSSIER_STATUT.histoire,\r\n            step: \"1\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.DOULEURS_LOCALISEES,\r\n                valeur: data.motif_douleurs_local\r\n                  ? data.motif_douleurs_local\r\n                  : true,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.IMPOTENCE_FONCTIONNELLE,\r\n                valeur: data.motif_impotence ? data.motif_impotence : false,\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.TYPE_ACCIDENT,\r\n                valeur: [data.motif_type_accident],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.MECANISME_TRAUMATISME,\r\n                valeur: [data.motif_mecanisme],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n          };\r\n          await completeDossier(dataToSend)\r\n            .then(async (data) => {\r\n              if (data.success) {\r\n                reloadData(true);\r\n                notification.success({\r\n                  message: \"Succès\",\r\n                  description: data.message,\r\n                });\r\n                reloadData(true);\r\n                setActiveKey(DOSSIER_STATUT.histoire);\r\n              } else {\r\n                notification.error({\r\n                  message: \"Erreur\",\r\n                  description: data.message,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: \"Impossible de creer l'element du dossier\",\r\n              });\r\n            });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key={\"dossier-acq-motif-\" + dossier.id}\r\n            title=\"Motif de consultation\"\r\n          />\r\n          <div className=\"\">\r\n            <SwitchLayout\r\n              label=\"Traumatisme avec douleurs localisées\"\r\n              name=\"motif_douleurs_local\"\r\n              key=\"motif_douleurs_local\"\r\n              // valuePropName=\"checked\"\r\n              value={\r\n                payload.length > 0 && dossier.statut >= DOSSIER_STATUT.motif\r\n                  ? payload.find(\r\n                      (eltDossier: any) =>\r\n                        eltDossier.rubrique ===\r\n                        CODE_RUBRIQUES.DOULEURS_LOCALISEES\r\n                    )?.valeur === 1\r\n                    ? true\r\n                    : false\r\n                  : null\r\n              }\r\n              disabled={dossier.statut > DOSSIER_STATUT.motif ? true : false}\r\n            />\r\n            <SwitchLayout\r\n              label=\"Impotence fonctionnelle\"\r\n              name=\"motif_impotence\"\r\n              key=\"motif_impotence\"\r\n              // valuePropName=\"checked\"\r\n              value={\r\n                payload.length > 0 && dossier.statut >= DOSSIER_STATUT.motif\r\n                  ? payload.find(\r\n                      (eltDossier: any) =>\r\n                        eltDossier.rubrique ===\r\n                        CODE_RUBRIQUES.IMPOTENCE_FONCTIONNELLE\r\n                    )?.valeur === 1\r\n                    ? true\r\n                    : false\r\n                  : null\r\n              }\r\n              disabled={dossier.statut > DOSSIER_STATUT.motif ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              size={12}\r\n              label=\"Type d'accident\"\r\n              name=\"motif_type_accident\"\r\n              key=\"motif_type_accident\"\r\n              items={TYPE_ACCIDENT}\r\n              rules={[formRules.ruleRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.motif,\r\n                CODE_RUBRIQUES.TYPE_ACCIDENT,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.motif ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              size={12}\r\n              label=\"Mécanisme ayant causé le traumatisme\"\r\n              key=\"motif_mecanisme\"\r\n              name=\"motif_mecanisme\"\r\n              items={MECANISME_TRAUMATISME}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.motif,\r\n                CODE_RUBRIQUES.MECANISME_TRAUMATISME,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.motif ? true : false}\r\n            />\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.motif ? (\r\n            <Space className=\"ms-auto\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary ml-3 rounded-pill\"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.histoire)}\r\n              >\r\n                Suivant\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-motif\" />\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Form, Space, Spin, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  RubriqueNavigate,\r\n  ScoreLayout,\r\n  ScoreFormValue,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { CODE_RUBRIQUES, DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\n\r\nimport { RubriqueEntity } from \"../../../../../entities/rubrique.entity\";\r\nimport { completeDossier } from \"../../../network\";\r\nimport { getPayload } from \"../DossierDetails\";\r\n\r\nexport const FormScore = ({\r\n  dossier,\r\n  eltDossiers,\r\n  rubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltDossiers: any;\r\n  rubriques: RubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n  const [selectedScore, setSelectedScore] = useState(\"\");\r\n  const [scoreGCS, setScoreGCS] = useState(\r\n    getPayload(dossier, DOSSIER_STATUT.score, CODE_RUBRIQUES.SCORE_GCS, false)\r\n      ? getPayload(\r\n          dossier,\r\n          DOSSIER_STATUT.score,\r\n          CODE_RUBRIQUES.SCORE_GCS,\r\n          false\r\n        )\r\n      : 0\r\n  );\r\n  const [scoreAIS, setScoreAIS] = useState(0);\r\n  const [scoreISS, setScoreISS] = useState(0);\r\n  const [scoreRTS, setScoreRTS] = useState(0);\r\n  const [scoreTRISS, setScoreTRISS] = useState(0);\r\n  const [scoreMESS, setScoreMESS] = useState(0);\r\n  const [scoreGHOISS, setScoreGHOISS] = useState(0);\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name=\"acq-score-form\"\r\n        key=\"acq-score-form\"\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.score ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id=\"acq-score\"\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n          // let dataToSend: any = form.getFieldsValue();\r\n          let dataToSend: any = {\r\n            dossierId: dossier.id,\r\n            statut: DOSSIER_STATUT.decision,\r\n            step: \"1\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SCORE_GCS,\r\n                valeur: [scoreGCS],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SCORE_ISS,\r\n                valeur: [scoreISS],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SCORE_RTS,\r\n                valeur: [scoreRTS],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SCORE_TRISS,\r\n                valeur: [scoreTRISS],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SCORE_MESS,\r\n                valeur: [scoreMESS],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.SCORE_GHOISS,\r\n                valeur: [scoreGHOISS],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n          };\r\n          console.log(\"data to post in score form : \", dataToSend);\r\n          await completeDossier(dataToSend).then(async (data) => {\r\n            if (data.success) {\r\n              notification.success({\r\n                message: \"Succès\",\r\n                description: data.message,\r\n              });\r\n              reloadData(true);\r\n              // set check icon to success (données enregistrées)\r\n              setActiveKey(DOSSIER_STATUT.decision);\r\n            } else {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: data.message,\r\n              });\r\n              // set check icon to danger (non enregistré)\r\n            }\r\n          });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        {/* ALIGNER LES SCORES DANS UN TAG DE NAVIGATION COMME LES RUBRIQUES */}\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key=\"dossier-acq-score\"\r\n            title=\"Score prédictifs - Trauma Score\"\r\n          />\r\n          <div>\r\n            <ScoreFormValue\r\n              selectedScore={selectedScore}\r\n              setSelectedScore={setSelectedScore}\r\n              scores={{\r\n                GCS: { value: scoreGCS, setValue: setScoreGCS },\r\n                AIS: { value: scoreAIS, setValue: setScoreAIS },\r\n                ISS: { value: scoreAIS, setValue: setScoreAIS },\r\n                RTS: { value: scoreAIS, setValue: setScoreAIS },\r\n                TRISS: { value: scoreAIS, setValue: setScoreAIS },\r\n                MESS: { value: scoreAIS, setValue: setScoreAIS },\r\n                GHOISS: { value: scoreAIS, setValue: setScoreAIS },\r\n              }}\r\n            />\r\n            <hr />\r\n            {dossier.statut > DOSSIER_STATUT.score ? (\r\n              <span></span>\r\n            ) : (\r\n              <ScoreLayout\r\n                selectedScore={selectedScore}\r\n                scoreGCS={setScoreGCS}\r\n                scoreISS={setScoreISS}\r\n                scoreRTS={setScoreRTS}\r\n                scoreTRISS={setScoreTRISS}\r\n                scoreMESS={setScoreMESS}\r\n                scoreGHOISS={setScoreGHOISS}\r\n              />\r\n            )}\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.score ? (\r\n            <Space className=\"ms-auto mt-5\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary ml-3 rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.diagnostic)}\r\n              >\r\n                Precedent\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary rounded-pill \"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.decision)}\r\n              >\r\n                Suivant\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-score\" />\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Form, FormInstance } from \"antd\";\r\nimport { DateLayout, InputLayout } from \"../../../../shared/Layouts\";\r\nimport { FaBookDead } from \"react-icons/fa\";\r\nimport { BS_BLUE } from \"../../../../../shared/colors\";\r\n\r\nexport const FormDeces = ({ formRef }: { formRef: FormInstance<any> }) => {\r\n  return (\r\n    <Form\r\n      name=\"acq-deces-form\"\r\n      key=\"acq-deces-form\"\r\n      form={formRef}\r\n      id=\"acq-deces\"\r\n      labelCol={{ span: 8 }}\r\n      scrollToFirstError\r\n    >\r\n      <div className=\"row\">\r\n        <i className=\"col-md-1\">\r\n          <FaBookDead size={24} color={BS_BLUE} />\r\n        </i>\r\n        <strong className=\"col-md-8\">\r\n          <h5 style={{ fontFamily: \"monospace\" }} className=\"text-primary\">\r\n            Décès\r\n          </h5>\r\n        </strong>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <DateLayout\r\n          label=\"Date du deces\"\r\n          name=\"deces_date\"\r\n          key={\"deces_date\"}\r\n          formRef={formRef}\r\n        />\r\n        <InputLayout\r\n          label=\"Motif\"\r\n          name=\"deces_motif\"\r\n          size={12}\r\n          key={\"deces_motif\"}\r\n        />\r\n        <InputLayout\r\n          label=\"Notes\"\r\n          name=\"deces_notes\"\r\n          multiple={true}\r\n          size={12}\r\n          key={\"deces_notes\"}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n","import { Form, FormInstance } from \"antd\";\r\nimport {\r\n  DateLayout,\r\n  FullSelectLayout,\r\n  InputLayout,\r\n} from \"../../../../shared/Layouts\";\r\nimport { FaExchangeAlt } from \"react-icons/fa\";\r\nimport { BS_BLUE, BS_WARNING } from \"../../../../../shared/colors\";\r\n\r\nexport const FormTransfert = ({ formRef }: { formRef: FormInstance<any> }) => {\r\n  const localFS = localStorage.getItem(\"formationSanitaires\");\r\n  const formationSanitaires = localFS ? JSON.parse(localFS) : [];\r\n\r\n  const localPraticiens = localStorage.getItem(\"praticiens\");\r\n  const praticiens = localPraticiens ? JSON.parse(localPraticiens) : [];\r\n\r\n  return (\r\n    <Form\r\n      name=\"acq-transfert-form\"\r\n      key=\"acq-transfert-form\"\r\n      form={formRef}\r\n      id=\"acq-transfert\"\r\n      labelCol={{ span: 8 }}\r\n      scrollToFirstError\r\n    >\r\n      <div className=\"row\">\r\n        <i className=\"col-md-1\">\r\n          <FaExchangeAlt size={24} color={BS_BLUE} />\r\n        </i>\r\n        <strong className=\"col-md-8\">\r\n          <h5 style={{ fontFamily: \"monospace\" }} className=\"text-primary\">\r\n            Transférer le dossier\r\n          </h5>{\" \"}\r\n        </strong>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <DateLayout\r\n          label=\"Date du transfert\"\r\n          name=\"transfert_date\"\r\n          key={\"transfert_date\"}\r\n          formRef={formRef}\r\n        />\r\n        <FullSelectLayout\r\n          label=\"Formations sanitaires\"\r\n          key=\"transfert_formation_sanitaire\"\r\n          name=\"formation_sanitaires\"\r\n          items={formationSanitaires}\r\n          size={12}\r\n          multiple={true}\r\n          placeholder=\"Selectionner la formation sanitaire\"\r\n        />\r\n        <FullSelectLayout\r\n          label=\"Praticiens\"\r\n          key=\"transfert-praticien\"\r\n          name=\"praticiens\"\r\n          items={praticiens}\r\n          size={12}\r\n          multiple={true}\r\n          placeholder=\"Selectionner le medecin à qui transférer le dossier\"\r\n        />\r\n        <InputLayout\r\n          label=\"Motif\"\r\n          name=\"transfert_motif\"\r\n          size={12}\r\n          key={\"transfert_motif\"}\r\n        />\r\n        <InputLayout\r\n          label=\"Notes\"\r\n          name=\"transfert_notes\"\r\n          multiple={true}\r\n          size={12}\r\n          key={\"transfert_notes\"}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n","import { Form, FormInstance } from \"antd\";\r\nimport { DateLayout, InputLayout } from \"../../../../shared/Layouts\";\r\nimport { FaSignOutAlt, FaTrashAlt } from \"react-icons/fa\";\r\nimport { BS_BLUE } from \"../../../../../shared/colors\";\r\nimport { getPayload } from \"../DossierDetails\";\r\nimport { DOSSIER_STATUT, CODE_RUBRIQUES } from \"../../../../../shared/rubrique\";\r\n\r\nexport const FormTampon = ({ formRef }: { formRef: FormInstance<any> }) => {\r\n  return (\r\n    <Form\r\n      name=\"acq-tampon-form\"\r\n      key=\"acq-tampon-form\"\r\n      form={formRef}\r\n      id=\"acq-tampon\"\r\n      labelCol={{ span: 8 }}\r\n      scrollToFirstError\r\n    >\r\n      <div className=\"row\">\r\n        <i className=\"col-md-1\">\r\n          <FaSignOutAlt size={24} color={BS_BLUE} />\r\n        </i>\r\n        <strong className=\"col-md-8\">\r\n          <h5 style={{ fontFamily: \"monospace\" }} className=\"text-primary\">\r\n            Sortie contre avis medical\r\n          </h5>\r\n        </strong>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <DateLayout\r\n          label=\"Date de la sortie\"\r\n          name=\"tampon_date\"\r\n          key={\"tampon_date\"}\r\n          formRef={formRef}\r\n        />\r\n        <InputLayout\r\n          label=\"Motif\"\r\n          name=\"tampon_motif\"\r\n          size={12}\r\n          key={\"tampon_motif\"}\r\n        />\r\n        <InputLayout\r\n          label=\"Notes\"\r\n          name=\"tampon_notes\"\r\n          multiple={true}\r\n          size={12}\r\n          key={\"tampon_notes\"}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n","import { Form, Space, Spin, notification } from \"antd\";\r\nimport {\r\n  RubriqueTitle,\r\n  RubriqueNavigate,\r\n  RadioLayout,\r\n  FullSelectLayout,\r\n} from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  CODE_RUBRIQUES,\r\n  DOSSIER_DECISION,\r\n  DOSSIER_STATUT,\r\n} from \"../../../../../shared/rubrique\";\r\nimport { completeDossier } from \"../../../network\";\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { formRules } from \"../../../../../shared/formRules\";\r\nimport { getPayload } from \"../DossierDetails\";\r\nimport { FormDeces } from \"./FormDeces\";\r\nimport { FormTransfert } from \"./FormTransfert\";\r\nimport { FormTampon } from \"./FormTampon\";\r\n\r\nexport const FormStatut = ({\r\n  dossier,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n  setActiveTag,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (key: number) => void;\r\n  setActiveTag: (tag: string) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [selectedFormStatut] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n  const [selectedStatut, setSelectedStatut] = useState(\"\");\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm} className=\"row\">\r\n      <Form\r\n        name=\"acq-statut-form\"\r\n        key=\"acq-statut-form\"\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.decision ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id=\"acq-statut\"\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n        onFinish={async (data) => {\r\n          setIsLoadingForm(true);\r\n\r\n          let dataToSend = {\r\n            dossierId: dossier.id,\r\n            statut:\r\n              selectedStatut === DOSSIER_DECISION.deces\r\n                ? DOSSIER_STATUT.decede\r\n                : DOSSIER_STATUT.anamnese,\r\n            step: selectedStatut === DOSSIER_DECISION.deces ? \"1\" : \"2\",\r\n            eltDossiers: [\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.STATUT_PRETHERA,\r\n                valeur: [data.statut_prethera],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n              {\r\n                dossier: dossier.id,\r\n                rubrique: CODE_RUBRIQUES.STATUT_DECISION,\r\n                valeur: [data.statut_decision],\r\n                date_update: new Date().toLocaleString(),\r\n                statut: 1,\r\n              },\r\n            ],\r\n            ...selectedFormStatut.getFieldsValue(),\r\n            deces: selectedStatut === DOSSIER_DECISION.deces ? 1 : 0,\r\n            transfert: selectedStatut === DOSSIER_DECISION.transfert ? 1 : 0,\r\n            puffer: selectedStatut === DOSSIER_DECISION.tampon ? 1 : 0,\r\n          };\r\n\r\n          await completeDossier(dataToSend).then(async (data) => {\r\n            if (data.success) {\r\n              notification.success({\r\n                message: \"Succès\",\r\n                description: data.message,\r\n              });\r\n              reloadData(true);\r\n              setActiveTag(\"2\");\r\n            } else {\r\n              notification.error({\r\n                message: \"Erreur\",\r\n                description: data.message,\r\n              });\r\n              // set check icon to danger (non enregistré)\r\n            }\r\n          });\r\n          setIsLoadingForm(false);\r\n        }}\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle key=\"dossier-acq-statut\" title=\"Statut clinique\" />\r\n          <div>\r\n            <RadioLayout\r\n              label=\"Statut clinique préthérapeutique\"\r\n              name=\"statut_prethera\"\r\n              key=\"statut_prethera\"\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.STATUT_PRETHERA\r\n              )}\r\n              rules={[formRules.ruleNoRequired]}\r\n              defaultValue={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.decision,\r\n                CODE_RUBRIQUES.STATUT_PRETHERA,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.decision ? true : false}\r\n            />\r\n            <FullSelectLayout\r\n              label=\"Decision thérapeutique\"\r\n              name=\"statut_decision\"\r\n              key=\"statut_decision\"\r\n              size={12}\r\n              items={eltRubriques.filter(\r\n                (elt) => elt.rubrique === CODE_RUBRIQUES.STATUT_DECISION\r\n              )}\r\n              rules={[formRules.ruleNoRequired]}\r\n              value={getPayload(\r\n                dossier,\r\n                DOSSIER_STATUT.decision,\r\n                CODE_RUBRIQUES.STATUT_DECISION,\r\n                false\r\n              )}\r\n              disabled={dossier.statut > DOSSIER_STATUT.decision ? true : false}\r\n              handleSelect={setSelectedStatut}\r\n            />\r\n            {selectedStatut === DOSSIER_DECISION.tampon ? (\r\n              <FormTampon\r\n                key={\"statut-tampon-form\"}\r\n                formRef={selectedFormStatut}\r\n              />\r\n            ) : selectedStatut === DOSSIER_DECISION.transfert ? (\r\n              <FormTransfert\r\n                key={\"statut-transfert-form\"}\r\n                formRef={selectedFormStatut}\r\n              />\r\n            ) : selectedStatut === DOSSIER_DECISION.deces ? (\r\n              <FormDeces\r\n                key={\"statut-deces-form\"}\r\n                formRef={selectedFormStatut}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {dossier.statut > DOSSIER_STATUT.decision ? (\r\n            <Space className=\"ms-auto\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary ml-3 rounded-pill\"\r\n                onClick={() => setActiveKey(DOSSIER_STATUT.score)}\r\n              >\r\n                Precedent\r\n              </button>\r\n            </Space>\r\n          ) : (\r\n            <RubriqueNavigate key=\"nav-acq-statut\" />\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Form, Spin } from \"antd\";\r\nimport form from \"antd/es/form\";\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { useState } from \"react\";\r\nimport { RubriqueTitle } from \"../../../../shared/Layouts\";\r\n\r\nexport const FormAntecedent = ({\r\n  dossier,\r\n  reloadData,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  dossier: any;\r\n  reloadData: (val: boolean) => void;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n  const payload = dossier.payload;\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm}>\r\n      <Form\r\n        name={\"acq-antecedent-form-\" + dossier.id}\r\n        key={\"acq-antecedent-form-\" + dossier.id}\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.antecedent ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id={\"acq-antecedent-\" + dossier.id}\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key={\"dossier-acq-antecedent-\" + dossier.id}\r\n            title=\"Antecedents médicaux\"\r\n          />\r\n          <div className=\"\">\r\n            <span>Coming soon</span>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Spin, Form } from \"antd\";\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { DOSSIER_STATUT } from \"../../../../../shared/rubrique\";\r\nimport { useState } from \"react\";\r\nimport { RubriqueTitle } from \"../../../../shared/Layouts\";\r\n\r\nexport const FormComorbidite = ({\r\n  dossier,\r\n  reloadData,\r\n  eltRubriques,\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  dossier: any;\r\n  reloadData: (val: boolean) => void;\r\n  eltRubriques: EltRubriqueEntity[];\r\n  activeKey: number;\r\n  setActiveKey: (tag: number) => void;\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoadingForm, setIsLoadingForm] = useState(false);\r\n  const payload = dossier.payload;\r\n\r\n  return (\r\n    <Spin spinning={isLoadingForm}>\r\n      <Form\r\n        name={\"acq-comorbidite-form-\" + dossier.id}\r\n        key={\"acq-comorbidite-form-\" + dossier.id}\r\n        form={form}\r\n        className={\r\n          activeKey === DOSSIER_STATUT.comorbidite ? \"collapse show\" : \"d-none\"\r\n        }\r\n        id={\"acq-comorbidite-\" + dossier.id}\r\n        labelCol={{ span: 8 }}\r\n        scrollToFirstError\r\n      >\r\n        <div className=\"card card-body\">\r\n          <RubriqueTitle\r\n            key={\"dossier-acq-comorbidite-\" + dossier.id}\r\n            title=\"Comorbidités\"\r\n          />\r\n          <div className=\"\">\r\n            <span>Coming soon</span>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n","import { Space } from \"antd\";\r\nimport { BS_COLOR } from \"../../../../../shared/colors\";\r\nimport { RUBRIQUES_TAGS_AMN } from \"../../../../../shared/rubrique\";\r\nimport { FormDiagnostic } from \"../rubriques/FormDiagnostic\";\r\nimport { FormEnquete } from \"../rubriques/FormEnquete\";\r\nimport { FormExamen } from \"../rubriques/FormExamen\";\r\nimport { FormHistoire } from \"../rubriques/FormHistoire\";\r\nimport { FormMotif } from \"../rubriques/FormMotif\";\r\nimport { FormScore } from \"../rubriques/FormScore\";\r\nimport { FormStatut } from \"../rubriques/FormStatut\";\r\nimport { EltDossierEntity } from \"../../../../../entities/eltDossier.entity\";\r\nimport { EltRubriqueEntity } from \"../../../../../entities/eltRubrique.entity\";\r\nimport { RubriqueEntity } from \"../../../../../entities/rubrique.entity\";\r\nimport { RubriqueTag } from \"../../../../shared/Layouts\";\r\nimport { useState } from \"react\";\r\nimport { FormAntecedent } from \"../rubriques/FormAntecedent\";\r\nimport { FormComorbidite } from \"../rubriques/FormComorbidite\";\r\n\r\nexport const DossierAnamnese = ({\r\n  dossier,\r\n  eltDossiers,\r\n  eltRubriques,\r\n  rubriques,\r\n  setActiveTag,\r\n  reloadData,\r\n}: {\r\n  dossier: any;\r\n  eltDossiers: EltDossierEntity[];\r\n  eltRubriques: EltRubriqueEntity[];\r\n  rubriques: RubriqueEntity[];\r\n  setActiveTag: (tag: string) => void;\r\n  reloadData: (val: boolean) => void;\r\n}) => {\r\n  const [activeKey, setActiveKey] = useState(dossier.statut);\r\n  // Sonde moi oh Dieu et connais mon coeur, eprouve moi et connais mes pensées.\r\n  // Regarde si je suis sur une mauvaise voie et garde moi sur la voie de l'eternite\r\n  // Ne plus reflechir, juste me laisser conduire\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"acq-tag\">\r\n        <Space className=\"mb-3 btn-group\" wrap>\r\n          {RUBRIQUES_TAGS_AMN.map((tag) => (\r\n            <RubriqueTag\r\n              name={tag.value}\r\n              label={tag.label}\r\n              bscolor={tag.bscolor as BS_COLOR}\r\n              activeKey={activeKey}\r\n              setActiveKey={setActiveKey}\r\n              statut={dossier.statut}\r\n            />\r\n          ))}\r\n        </Space>\r\n      </div>\r\n      {/* MOTIF DE CONSULTATION */}\r\n      <FormMotif\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      {/* HISTOIRE DE LA MALADIE */}\r\n      <FormHistoire\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      <FormAntecedent\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      <FormComorbidite\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      {/* ENQUETES DES SYSTEMES DE RECHERCHE */}\r\n      <FormEnquete\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      {/* EXAMEN PHYSIQUE */}\r\n      <FormExamen\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      {/* DIAGNOSTIC DES LESIONS */}\r\n      <FormDiagnostic\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltDossiers={eltDossiers}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      {/* TRAUMA SCORE */}\r\n      <FormScore\r\n        dossier={dossier}\r\n        reloadData={reloadData}\r\n        eltDossiers={eltDossiers}\r\n        rubriques={rubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n      />\r\n      {/* STATUS CLINIQUE */}\r\n      <FormStatut\r\n        dossier={dossier}\r\n        eltRubriques={eltRubriques}\r\n        activeKey={activeKey}\r\n        setActiveKey={setActiveKey}\r\n        setActiveTag={setActiveTag}\r\n        reloadData={reloadData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const DossierTraitement = () => {\r\n  return <div className=\"p-5\">Coming soon</div>;\r\n};\r\n","export const DossierSuivi = () => {\r\n  return <div className=\"p-5\">Coming soon</div>;\r\n};\r\n","export const DossierRehabilitation = () => {\r\n  return <div className=\"p-5\">Coming soon</div>;\r\n};\r\n","import { DossierEntity } from \"../../../../entities/dossier.entity\";\r\nimport { Tabs, TabsProps, notification } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  fetchDossier,\r\n  fetchEltDossier,\r\n  fetchEltRubrique,\r\n  fetchRubrique,\r\n} from \"../../network\";\r\nimport { EltRubriqueEntity } from \"../../../../entities/eltRubrique.entity\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RubriqueEntity } from \"../../../../entities/rubrique.entity\";\r\nimport {\r\n  FaClinicMedical,\r\n  FaNotesMedical,\r\n  FaRegArrowAltCircleRight,\r\n  FaRegCheckCircle,\r\n} from \"react-icons/fa\";\r\nimport { EltDossierEntity } from \"../../../../entities/eltDossier.entity\";\r\nimport { DossierAnamnese } from \"./steps/DossierAnamnese\";\r\nimport { DossierTraitement } from \"./steps/DossierTraitement\";\r\nimport { DossierSuivi } from \"./steps/DossierSuivi\";\r\nimport { DossierRehabilitation } from \"./steps/DossierRehabilitation\";\r\n\r\nexport const DossierDetails = () => {\r\n  const router = useHistory();\r\n  const state = router.location.state as any;\r\n  const [dossier, setDossier] = useState(state.dossier);\r\n  const [activeTag, setActiveTag] = useState(dossier.step);\r\n  const [eltRubriques, setEltRubriques] = useState<EltRubriqueEntity[]>([]);\r\n  const [rubriques, setRubriques] = useState<RubriqueEntity[]>([]);\r\n  const [eltDossiers, setEltDossiers] = useState<EltDossierEntity[] | any>([]);\r\n  const [reloadData, setReloadData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchRubrique().then((data) => {\r\n      if (data.success) setRubriques(data.result);\r\n    });\r\n    fetchEltRubrique().then((data) => {\r\n      if (data.success) setEltRubriques(data.result);\r\n    });\r\n    fetchEltDossier().then((data) => {\r\n      if (data.success) {\r\n        const elts = data.result.filter(\r\n          (eltDos) => eltDos.dossier === dossier.id\r\n        );\r\n        setEltDossiers(elts);\r\n      }\r\n    });\r\n    if (reloadData) {\r\n      console.log(\"handle reload changes\");\r\n      fetchDossier(dossier.id).then((data) => {\r\n        console.log(\"reload dossier after changes : \", data.result);\r\n        setReloadData(false);\r\n        if (data.success) {\r\n          setDossier(data.result);\r\n        } else {\r\n          notification.error({\r\n            message: \"Erreur\",\r\n            description:\r\n              \"Un problème est survenu. Impossible d'afficher' le dossier.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [dossier, reloadData]);\r\n\r\n  const items: TabsProps[\"items\"] = [\r\n    {\r\n      key: \"1\",\r\n      label: (\r\n        <span>\r\n          <FaNotesMedical className=\"mx-3\" size={28} />\r\n          Anamnese et diagnostic\r\n        </span>\r\n      ),\r\n      children: (\r\n        <DossierAnamnese\r\n          dossier={dossier}\r\n          eltDossiers={eltDossiers}\r\n          eltRubriques={eltRubriques}\r\n          rubriques={rubriques}\r\n          setActiveTag={setActiveTag}\r\n          reloadData={setReloadData}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      label: (\r\n        <span>\r\n          <FaClinicMedical className=\"mx-3\" size={28} />\r\n          Traitement\r\n        </span>\r\n      ),\r\n      children: <DossierTraitement />,\r\n      disabled: dossier.statut < 20 ? true : false,\r\n    },\r\n    {\r\n      key: \"3\",\r\n      label: (\r\n        <span>\r\n          <FaRegArrowAltCircleRight className=\"mx-3\" size={28} />\r\n          Suivi post opératoire\r\n        </span>\r\n      ),\r\n      children: <DossierSuivi />,\r\n      disabled: dossier.statut < 30 ? true : false,\r\n    },\r\n    {\r\n      key: \"4\",\r\n      label: (\r\n        <span>\r\n          <FaRegCheckCircle className=\"mx-3\" size={28} />\r\n          Réhabilitation\r\n        </span>\r\n      ),\r\n      children: <DossierRehabilitation />,\r\n      disabled: dossier.statut < 40 ? true : false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"section profile\">\r\n      <div className=\"row\">\r\n        <div className=\"card card-body\">\r\n          <Tabs\r\n            defaultActiveKey=\"1\"\r\n            items={items}\r\n            activeKey={activeTag}\r\n            onTabClick={(key) => {\r\n              console.log(\"in navigation tag dossier \", key, dossier.step);\r\n              setReloadData(true);\r\n              if (key <= dossier.step) setActiveTag(key);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport type DossierState = {\r\n  dossier: DossierEntity;\r\n  readOnly: boolean;\r\n};\r\n\r\nexport const getPayload = (\r\n  dossier: any,\r\n  dossierStep: number,\r\n  codeRubrique: string,\r\n  multiple: boolean\r\n) => {\r\n  const payload = dossier.payload;\r\n  let values: any[] = [];\r\n  let value;\r\n  if (payload.length > 0 && dossier.statut > dossierStep) {\r\n    if (multiple) {\r\n      payload\r\n        .filter((eltDossier: any) => eltDossier.rubrique === codeRubrique)\r\n        ?.map((elt: any) => {\r\n          values.push(elt.valeur);\r\n        });\r\n    } else {\r\n      value = payload.find(\r\n        (eltDossier: any) => eltDossier.rubrique === codeRubrique\r\n      )?.valeur;\r\n    }\r\n  }\r\n\r\n  return multiple ? values : value;\r\n};\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierDetails } from \"../../components/dossier/DossierDetails\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { ButtonWithModal } from \"../../../shared/ButtonWithModal\";\r\nimport { notification } from \"antd\";\r\nimport { useEffect } from \"react\";\r\nimport { PatientForm } from \"../../components/Patients/PatientForm\";\r\n\r\nexport const AddDossierPage = () => {\r\n  const router = useHistory();\r\n  const { dossier, readOnly } = router.location.state\r\n    ? (router.location.state as any)\r\n    : {\r\n        dossier: null,\r\n        readOnly: false,\r\n      };\r\n\r\n  useEffect(() => {\r\n    if (!dossier) {\r\n      notification.error({\r\n        message: \"Erreur\",\r\n        description:\r\n          \"Veuillez selectionner un patient pour consulter son dossier\",\r\n      });\r\n      router.push(ROUTES.PATIENT_PAGE.LIST_PATIENT);\r\n    }\r\n  }, [dossier, router]);\r\n\r\n  return (\r\n    <AdminContainer clicked=\"registre-all\">\r\n      <div className=\"row\">\r\n        <h2 className=\"col-md-6\">\r\n          <Link to={ROUTES.REGISTRE_PAGE.PRINCIPAL}>Registre principal</Link> |\r\n          {\"  \"}\r\n          <span className=\"\">\r\n            {\"P\" +\r\n              dossier.patient.id +\r\n              \"FS\" +\r\n              dossier.formation_sanitaire.id +\r\n              \"D\" +\r\n              dossier.id}\r\n          </span>\r\n        </h2>\r\n        <div className=\"col-md-6 ms-auto\">\r\n          <ButtonWithModal\r\n            width={800}\r\n            buttonText=\"Informations personnelles\"\r\n            buttonProps={{\r\n              style: {\r\n                backgroundColor: \"#F5F8FF\",\r\n              },\r\n              className: \"btn rounded-pill\",\r\n              icon: (\r\n                <FaUserAlt\r\n                  style={{ marginRight: 5, marginBottom: 2 }}\r\n                  size={20}\r\n                />\r\n              ),\r\n            }}\r\n            modalProps={{ title: `Informations personnelles du patient` }}\r\n          >\r\n            {(closeModal) => (\r\n              <PatientForm\r\n                key={\"patient-details\"}\r\n                patient={dossier.patient}\r\n                readOnly={true}\r\n              />\r\n            )}\r\n          </ButtonWithModal>\r\n        </div>\r\n      </div>\r\n\r\n      <DossierDetails />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Document, Page, StyleSheet, View, Text } from \"@react-pdf/renderer\";\r\nimport { CODE_RUBRIQUES, getQualification } from \"../../shared/rubrique\";\r\nimport { ORGANISMES } from \"../../shared/constants\";\r\n\r\nconst documentStyle = StyleSheet.create({\r\n  page: { flexDirection: \"column\", flex: 1 },\r\n  section: { margin: 10, padding: 10, flexGrow: 1 },\r\n  textLabel: { marginLeft: 5 },\r\n  textValue: { fontWeight: \"thin\" },\r\n  textLine: { marginLeft: 25, marginTop: 10, marginBottom: 5 },\r\n});\r\n\r\nexport const PDFDossierComplet = ({ dossier }: { dossier?: any }) => {\r\n  console.log(\r\n    \"i'm rendering well in show dossier page as PDF. Here it's me !\",\r\n    dossier\r\n  );\r\n\r\n  const DocumentInput = ({\r\n    label,\r\n    value,\r\n    tag,\r\n  }: {\r\n    label: string;\r\n    value: string;\r\n    tag: string;\r\n  }) => (\r\n    <Text key={tag + \"-\" + label}>\r\n      <Text style={documentStyle.textLabel}>{label} </Text>{\" \"}\r\n      <Text style={documentStyle.textValue}>{value}</Text>\r\n    </Text>\r\n  );\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={documentStyle.page}>\r\n        <View style={documentStyle.section}>\r\n          <Text> IDENTITE DU PRATICIEN </Text>\r\n          <Text style={documentStyle.textLine}>\r\n            {\" \"}\r\n            Nom : {dossier.praticien.nom}{\" \"}\r\n          </Text>\r\n          <Text style={documentStyle.textLine}>\r\n            {\" \"}\r\n            Prenom : {dossier.praticien.prenom}{\" \"}\r\n          </Text>\r\n          <Text style={documentStyle.textLine}>\r\n            {\" \"}\r\n            Qualification :{\" \"}\r\n            {\r\n              getQualification(dossier.praticien.qualification)?.designation\r\n            }{\" \"}\r\n          </Text>\r\n          <Text style={documentStyle.textLine}>\r\n            {\" \"}\r\n            Années d'experiences : {dossier.praticien.nb_experience}\r\n          </Text>\r\n          <Text style={documentStyle.textLine}>\r\n            {\" \"}\r\n            Adhérant à un réseau de traumatologie :{\" \"}\r\n            {dossier.praticien.organismes?.length === 0\r\n              ? \"aucun\"\r\n              : dossier.praticien.organismes.map(\r\n                  (user_org: number | string, index: number) =>\r\n                    ORGANISMES.find(\r\n                      (org) =>\r\n                        org.id === user_org &&\r\n                        org.type_organisme ===\r\n                          CODE_RUBRIQUES.RESEAU_TRAUMATOLOGIE\r\n                    )\r\n                      ? ORGANISMES.find(\r\n                          (org) =>\r\n                            org.id === user_org &&\r\n                            org.type_organisme ===\r\n                              CODE_RUBRIQUES.RESEAU_TRAUMATOLOGIE\r\n                        )?.designation + \", \"\r\n                      : \"\"\r\n                )}\r\n          </Text>\r\n        </View>\r\n        <View style={documentStyle.section}>\r\n          <Text> FORMATION SANITAIRE </Text>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n","import { PDFViewer } from \"@react-pdf/renderer\";\r\nimport { PDFDossierComplet } from \"../../../../services/pdfrenderer/PDFDossierComplet\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { Layout, notification } from \"antd\";\r\nimport { ROUTES } from \"../../../../routes\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const ShowDossierPage = () => {\r\n  const router = useHistory();\r\n  const { dossier, readOnly } = router.location.state\r\n    ? (router.location.state as any)\r\n    : {\r\n        dossier: null,\r\n        readOnly: false,\r\n      };\r\n\r\n  useEffect(() => {\r\n    if (!dossier) {\r\n      notification.error({\r\n        message: \"Erreur\",\r\n        description: \"Veuillez selectionner un dossier pour le consulter\",\r\n      });\r\n      router.push(ROUTES.REGISTRE_PAGE.PRINCIPAL);\r\n    }\r\n  }, [dossier, router]);\r\n\r\n  return (\r\n    <AdminContainer clicked=\"registre-all\">\r\n      <h2 className=\"\">\r\n        <Link to={ROUTES.REGISTRE_PAGE.PRINCIPAL}>Registre principal</Link> |\r\n        DOSSIER N°\r\n        <span className=\"text-primary\">\r\n          {dossier.formation_sanitaire.id +\r\n            \"Y\" +\r\n            dossier?.patient.id +\r\n            \"P\" +\r\n            dossier.id}\r\n        </span>\r\n      </h2>\r\n      <Layout>\r\n        {/* <Content> */}\r\n        <PDFViewer\r\n          // showToolbar\r\n          style={{\r\n            width: window.innerWidth / 1.45, //the pdf viewer will take up all of the width and height\r\n            height: window.innerHeight,\r\n          }}\r\n        >\r\n          <PDFDossierComplet dossier={dossier} />\r\n        </PDFViewer>\r\n        {/* </Content> */}\r\n      </Layout>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierListComponent } from \"../../components/dossier/DossierList\";\r\n\r\nexport const RegistreFSPage = () => {\r\n  const router = useHistory();\r\n  const state = router.location.state ? (router.location.state as any) : null;\r\n\r\n  return (\r\n    <AdminContainer\r\n      clicked=\"registre-fs\"\r\n      formation_sanitaire={state?.formation_sanitaire}\r\n    >\r\n      <h2> Registre | FS </h2> <hr />\r\n      <DossierListComponent\r\n        formation_sanitaire={state?.formation_sanitaire}\r\n        key={\"list-fs\"}\r\n        title={\" Registre | FS \"}\r\n      />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { DossierListComponent } from \"../../components/dossier/DossierList\";\r\n\r\nexport const RegistrePraticienPage = () => {\r\n  const router = useHistory();\r\n  const state = router.location.state ? (router.location.state as any) : null;\r\n\r\n  return (\r\n    <AdminContainer clicked=\"registre-praticien\" praticien={state?.praticien}>\r\n      <h2> Registre | Praticien </h2> <hr />\r\n      <DossierListComponent\r\n        key={\"list-praticient\"}\r\n        praticien={state?.praticien ? state?.praticien : \"0007\"}\r\n        title={\" Registre | Praticien \"}\r\n      />\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { AdminContainer } from \"../../components/AdminContainer\";\r\nimport { AddUserComponent } from \"../../components/Utilisateur/AddUserComponent\";\r\nimport { ROUTES } from \"../../../../routes\";\r\n\r\nexport const ShowUserPage = () => {\r\n  const router = useHistory();\r\n  const state = router.location.state ? (router.location.state as any) : null;\r\n\r\n  return (\r\n    <AdminContainer clicked=\"users-list\">\r\n      <h2>\r\n        <Link to={ROUTES.USER_PAGE.LIST_USER}>Liste des utilisateurs</Link> |\r\n        Utilisateur M00P80Y{\" \"}\r\n        <span className=\"text-primary m-0\">{state?.user.id}</span>\r\n      </h2>\r\n      {/* <hr /> */}\r\n      <div className=\"card mt-0\">\r\n        <div className=\"card-body\">\r\n          <AddUserComponent user={state?.user} readOnly={state?.readOnly} />\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  );\r\n};\r\n","import { Route } from \"react-router-dom\";\r\nimport { AdminDashboard } from \"../pages/AdminDashboard\";\r\nimport { ComingSoonPage } from \"../../shared/ComingSoon\";\r\nimport { AddUserPage } from \"../pages/Utilisateurs/AddUserPage\";\r\nimport { UserListPage } from \"../pages/Utilisateurs/UserListPage\";\r\nimport { UserDemandePage } from \"../pages/Utilisateurs/UserDemandePage\";\r\nimport { AddPatientPage } from \"../pages/Patients/AddPatientPage\";\r\nimport { PatientListPage } from \"../pages/Patients/PatientListPage\";\r\nimport { RegistrePrincipalPage } from \"../pages/Registre/RegistrePrincipalPage\";\r\nimport { RegistreTraitementPage } from \"../pages/Registre/RegistreTraitementPage\";\r\nimport { RegistreTamponPage } from \"../pages/Registre/RegistreTamponPage\";\r\nimport { RegistreDecesPage } from \"../pages/Registre/RegistreDecesPage\";\r\nimport { NouvelleAnalyse } from \"../pages/Analyse/NouvelleAnalyse\";\r\nimport { AnalyseDemandePage } from \"../pages/Analyse/AnalyseDemandePage\";\r\nimport { AnalyseListDemandePage } from \"../pages/Analyse/AnalyseListDemande\";\r\nimport { AnalyseHistoriquePage } from \"../pages/Analyse/AnalyseHistoriquePage\";\r\nimport { ParametresDonneesPage } from \"../pages/Parametres/ParametresDonneesPage\";\r\nimport { ParametresConfig } from \"../pages/Parametres/ParametresConfig\";\r\nimport { ShowPatientPage } from \"../pages/Patients/ShowPatientPage\";\r\nimport { AddDossierPage } from \"../pages/Registre/AddDossierPage\";\r\nimport { ShowDossierPage } from \"../pages/Registre/ShowDossierPage\";\r\nimport { RegistreFSPage } from \"../pages/Registre/RegistreFSPage\";\r\nimport { RegistrePraticienPage } from \"../pages/Registre/RegistrePraticienPage\";\r\nimport { ShowUserPage } from \"../pages/Utilisateurs/ShowUserPage\";\r\n\r\nexport const AdminRoutes = () => {\r\n  return (\r\n    <>\r\n      <Route exact path=\"/admin/dashboard\" component={AdminDashboard} />\r\n      <Route exact path=\"/admin/users\" component={ComingSoonPage} />\r\n      <Route exact path=\"/admin/users/new\" component={AddUserPage} />\r\n      <Route exact path=\"/admin/users/show\" component={ShowUserPage} />\r\n      <Route exact path=\"/admin/users/list\" component={UserListPage} />\r\n      <Route exact path=\"/admin/users/demandes\" component={UserDemandePage} />\r\n      <Route exact path=\"/admin/patients\" component={ComingSoonPage} />\r\n      <Route exact path=\"/admin/patients/new\" component={AddPatientPage} />\r\n      <Route exact path=\"/admin/patients/show\" component={ShowPatientPage} />\r\n      <Route exact path=\"/admin/patients/list\" component={PatientListPage} />\r\n      <Route exact path=\"/admin/registre\" component={ComingSoonPage} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/registre/all\"\r\n        component={RegistrePrincipalPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/registre/dossier/complete\"\r\n        component={AddDossierPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/registre/dossier/show\"\r\n        component={ShowDossierPage}\r\n      />\r\n      <Route exact path=\"/admin/registre/fs\" component={RegistreFSPage} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/registre/praticien\"\r\n        component={RegistrePraticienPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/registre/traitement\"\r\n        component={RegistreTraitementPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/registre/tampon\"\r\n        component={RegistreTamponPage}\r\n      />\r\n      <Route exact path=\"/admin/registre/deces\" component={RegistreDecesPage} />\r\n\r\n      <Route exact path=\"/admin/analyse\" component={ComingSoonPage} />\r\n      <Route exact path=\"/admin/analyse/new\" component={NouvelleAnalyse} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/analyse/demandes/new\"\r\n        component={AnalyseDemandePage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/analyse/demandes/list\"\r\n        component={AnalyseListDemandePage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/analyse/historique\"\r\n        component={AnalyseHistoriquePage}\r\n      />\r\n      <Route exact path=\"/admin/documents\" component={ComingSoonPage} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/documents/certificat\"\r\n        component={ComingSoonPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/documents/expertise\"\r\n        component={ComingSoonPage}\r\n      />\r\n      <Route exact path=\"/admin/documents/dossier\" component={ComingSoonPage} />\r\n      <Route exact path=\"/admin/parametres\" component={ComingSoonPage} />\r\n      <Route\r\n        exact\r\n        path=\"/admin/parametres/donnees\"\r\n        component={ParametresDonneesPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/admin/parametres/configuration\"\r\n        component={ParametresConfig}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;\r\n","import { FaCannabis, FaPhoneAlt } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../../routes\";\r\n\r\nexport const ComingSoonPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"section error-404 min-vh-100 d-flex flex-column align-items-center justify-content-center\">\r\n        <h1 className=\"mb-3\">\r\n          <i>\r\n            <FaCannabis />{\" \"}\r\n          </i>\r\n        </h1>\r\n        <h2 className=\"mb-2 text-center\">\r\n          Désolé, cette page n'est pas disponible pour l'instant. Nous\r\n          travaillons sur cette fonctionnalité et elle sera bientôt disponible.\r\n        </h2>\r\n        <small>\r\n          Pour tout problème, veuillez contacter l'administrateur{\" \"}\r\n          <i className=\"mx-2\">\r\n            {\" \"}\r\n            <FaPhoneAlt />\r\n            {/* <FaWhatsapp size={18} /> */}\r\n          </i>\r\n          (+237) 655 244 570\r\n        </small>\r\n        <Link className=\"btn mt-5\" to={ROUTES.ADMIN_PAGE.DASHBOARD}>\r\n          Retour à la page d'accueil\r\n        </Link>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComingSoonPage;\r\n"],"names":["SidebarContainer","styled","div","_templateObject","_taggedTemplateLiteral","PRIMARY","Sidebar","_ref","routes","clicked","router","useHistory","_jsx","children","id","className","map","item","subItems","_jsxs","includes","concat","icon","title","BiChevronDown","subItem","onClick","push","pathname","link","state","formationSanitaire","values","select","AdminContainer","praticien","formation_sanitaire","_useState","useState","_useState2","_slicedToArray","shrink","setShrink","localPraticiens","localStorage","getItem","praticiens","JSON","parse","localFS","formationSanitaires","_useState3","_useState4","selectedPraticien","setSelectedPraticien","_useState5","_useState6","selectedFormationSanitaire","setSelectedFormationSanitaire","optionsPT","optionsFS","handleFSChange","organismeId","_formationSanitaires$","_formationSanitaires$2","find","organisme","ROUTES","REGISTRE_PAGE","FORMATION_SANITAIRE","handlePraticienChange","praticienId","PRATICIEN","i","value","label","nom","prenom","designation","Navbar","homeLink","ADMIN_PAGE","DASHBOARD","ADMIN_SIDEBAR_ITEMS","node","Select","showSearch","placeholder","optionFilterProp","defaultActiveFirstOption","filterOption","input","option","_option$label2","toLowerCase","filterSort","optionA","optionB","_optionA$label2","_optionB$label2","localeCompare","options","defaultValue","onChange","_option$label","_optionA$label","_optionB$label","AppFooter","href","FaHome","color","BS_BLUE","GREY_LIGHT","size","FaUsersCog","FaUserPlus","FaUsers","FaMailBulk","FaHospitalUser","FaBookMedical","FaListUl","FaHospitalAlt","FaUserNurse","FaSync","FaTrashAlt","FaBookDead","FaChartBar","FaForward","FaCommentMedical","FaHistory","FaCogs","FaReadme","FaTools","MiniCard","card","CardDashboard","_ref2","style","cursor","width","marginRight","backgroundColor","description","FaChevronRight","AdminDashboard","fontFamily","marginTop","AdminCardsDashboard","GREEN_DARK","FaNotesMedical","BS_WARNING","FaUserInjured","PATIENT_PAGE","LIST_PATIENT","ORANGE_DARK","AddUserPage","AddUserComponent","months","days","full","abbr","DateFrHrWithTime","date","dates","Date","getDay","getDate","getMonth","getFullYear","getHours","getMinutes","hour","toString","length","minute","DataTableContainer","SEMIDARK","DataTable","data","columns","loading","selectedRowKeys","onSelectedRowKeysChange","filterFunction","buttons","expandable","expandField","filterValue","setFilterValue","dataToShow","filter","dataItem","rowSelection","Space","marginBottom","Input","e","target","Table","undefined","dataSource","expandedRowRender","row","rowKey","onRow","rowId","newSelectedRowKeys","indexOf","_toConsumableArray","selectRow","_id","MEDECIN_COLUMNS","localOrganismes","organismes","key","render","cell","adresse_mail","telephone","org","type_organisme","CODE_RUBRIQUES","Link","to","Badge","statut","count","dossiers","showZero","UserStatutTag","FaInfoCircle","USER_PAGE","SHOW_USER","user","readOnly","val","Tag","FaArrowDown","bordered","FaClock","FaCheck","FaWindowClose","ListUserComponent","isLoading","setIsLoading","medecins","setMedecins","useEffect","fetchMedecins","then","success","console","log","result","ADD_USER","UserListPage","InfoUserComponent","_eltRubriques$find","eltRubriques","setEltRubriques","setOrganismes","fetchEltRubrique","fetchOrganisme","items","BsPersonBoundingBox","Descriptions","column","Item","sexe","date_naissance","adresse","elt","qualification","date_fonction","RESEAU_TRAUMATOLOGIE","Tabs","defaultActiveKey","DemandeComponent","isLoadingData","setIsLoadingData","demandes","setDemandes","isReplying","setIsReplying","_useState7","_useState8","reload","setReload","fetchDemandes","notification","error","message","rejectDemande","_asyncToGenerator","_regeneratorRuntime","mark","_callee","motif","wrap","_context","prev","next","rejeterDemande","demandeID","medecin","personne","catch","err","stop","_x","_x2","apply","arguments","acceptDemande","_callee2","_context2","accepterDemande","_x3","_x4","ItemModal","Spin","spinning","tabIndex","type","List","itemLayout","renderItem","actions","date_envoie","date_reponse","extra","Meta","avatar","Avatar","COLOR_LIST","Math","floor","random","verticalAlign","charAt","DemandeTag","UserDemandePage","sexeItems","code","PatientInfoForm","patient","_Form$useForm","Form","useForm","form","dateValue","useWatch","isLoadingForm","setIsLoadingForm","pays","setPays","change","setChange","getAgePatient","age","moment","diff","unit","getAge","dateToFormat","formatDate","toLocaleString","isMineur","fetchPays","getNationalite","patientNation","nat","nationalite","getReligion","patientReligion","religion","getProfession","professionId","patientProfession","PatientFormReadOnly","name","labelCol","span","disabled","fontSize","RadioLayout","rules","formRules","ruleNoRequired","profession","nom_urgence","PatientFormEditable","scrollToFirstError","onFinish","dataToPost","createPatient","InputLayout","niu","ruleRequired","DateLayout","FaExclamationCircle","FullSelectLayout","rubrique","RELIGION","PROFESSION","telephone_urgence","PatientForm","activeTab","setActiveTab","activeKey","onTabClick","AddPatientPage","PATIENT_COLUMNS","_row$formation_sanita","_row$formation_sanita2","dossier_id","_row$praticien","_row$praticien2","modePCTag","mode","dossierStatutTag","Tooltip","SHOW_PATIENT","FaPencilRuler","PRINCIPAL","dossier","ListPatientComponent","patients","setPatients","fetchPatients","ADD_PATIENT","PatientListPage","ButtonWithModal","buttonText","modalProps","buttonProps","props","_objectWithoutProperties","_excluded","isModalVisible","setIsModalVisible","closeModal","_objectSpread","Button","display","alignItems","Modal","open","onCancel","footer","DOSSIER_COLUMNS","setDossiers","loadData","setTraiterDossier","setSelectedDossier","DOSSIER_STATUT","clos","decede","info","anamnese","FaArrowAltCircleRight","FaEdit","warning","ADD_DOSSIER","FaExchangeAlt","FaPenAlt","YELLOW_DARK","SHOW_DOSSIER","DossierAjout","setFormationSanitaires","reloadData","setReloadData","_useState9","_useState10","_useState11","_useState12","selectedPatient","setSelectedPatient","_useState13","_useState14","resetFields","setFieldValue","SelectPatient","patientId","SelectFormationSanitaire","dossierToCreate","dossierToUpdate","dateEntree","dateSortie","visibilite","transfert","transfertNb","puffer","pufferNb","lastUpdate","createDossier","_ref3","fetchDossier","newDossierData","step","consultation1","updateDossier","required","DatePicker","Container","DossierListComponent","tampon","attente","deces","dossierAllData","setAllDossiers","dossierData","traiterDossier","selectedDossier","reset","setReset","dos","DOSSIER_PC_MODE_TABS","LegendItem","centered","FaSearch","Checkbox","checked","borderWidth","borderRadius","FaPlus","RegistrePrincipalPage","location","RegistreTraitementPage","RegistreTamponPage","RegistreDecesPage","DecesCardsDashboard","NouvelleAnalyse","AnalyseDemandePage","AnalyseListDemandePage","AnalyseHistoriquePage","ParametresDonneesPage","ParametresConfig","ShowPatientPage","FormDiagnostic","eltDossiers","setActiveKey","diagnostic","dataToSend","dossierId","score","DIAGNOSTIC_CLASS_AO","valeur","diag_class_ao","date_update","DIAGNOSTIC_LESSION_1","diag_lessions_ass1","DIAGNOSTIC_LESSION_2","diag_lessions_ass2","DIAGNOSTIC_LESSION_3","completeDossier","RubriqueTitle","multiple","getPayload","FaImage","LIGHT_PRIMARY","danger","examen","RubriqueNavigate","FormEnquete","enquete","ENQUETE_GENERAL","enq_general","ENQUETE_LOCOMOTEUR","enq_app_locomoteur","ENQUETE_NERVEUX","enq_sys_nerveux","ENQUETE_RESPIRATOIRE","enq_app_respiratoire","ENQUETE_CARDIO","enq_app_cardio","ENQUETE_DIGESTIF","enq_app_digestif","ENQUETE_UROGENITAL","enq_app_génital","histoire","FormExamen","EXAMEN_TA","par_ta","EXAMEN_POULS","par_pouls","EXAMEN_FR","par_fr","EXAMEN_T","par_t","EXAMEN_GENERAL","exa_gen","LUXATION_CLINIQUE","lux_cli","FRACTURE_CLINIQUE","fra_cli","TYPE_FRACTURE","typ_fra","TYPE_FRACTURE_PEDIATRIE","typ_frac_ped","COLORATION_MEMBRE","exa_col","POULS_PERIPHERIQUE","exa_pouls_per","TEMPERATURE_MEMBRE","exa_temp_mem","SENSIBILITE","exa_sens","EXAMEN_APP_DIGESTIF","exa_app_dig","EXAMEN_APP_UROGENITAL","exa_app_uro","EXAMEN_APP_CARDIO","exa_app_cardio","EXAMEN_APP_NEURO","exa_app_neuro","EXAMEN_RADIO_INITIALES","exa_rad_ini","htmlFor","valuePropName","getValueFromEvent","Array","isArray","fileList","Upload","action","listType","FormHistoire","PREMIERS_SOINS","DELAI_FS","MOYENS_TRANSPORT","DATE_TRAUMATISME","hist_date","hist_premier_soin","hist_delai_fs","hist_moyen_trans","FormMotif","_payload$find","_payload$find2","payload","TYPE_ACCIDENT","MECANISME_TRAUMATISME","DOULEURS_LOCALISEES","motif_douleurs_local","IMPOTENCE_FONCTIONNELLE","motif_impotence","motif_type_accident","motif_mecanisme","SwitchLayout","eltDossier","FormScore","rubriques","selectedScore","setSelectedScore","SCORE_GCS","scoreGCS","setScoreGCS","scoreAIS","setScoreAIS","scoreISS","setScoreISS","scoreRTS","setScoreRTS","scoreTRISS","setScoreTRISS","_useState15","_useState16","scoreMESS","setScoreMESS","_useState17","_useState18","scoreGHOISS","setScoreGHOISS","decision","SCORE_ISS","SCORE_RTS","SCORE_TRISS","SCORE_MESS","SCORE_GHOISS","ScoreFormValue","scores","GCS","setValue","AIS","ISS","RTS","TRISS","MESS","GHOISS","ScoreLayout","FormDeces","formRef","FormTransfert","FormTampon","FaSignOutAlt","FormStatut","setActiveTag","_Form$useForm3","selectedFormStatut","selectedStatut","setSelectedStatut","DOSSIER_DECISION","STATUT_PRETHERA","statut_prethera","STATUT_DECISION","statut_decision","getFieldsValue","handleSelect","FormAntecedent","antecedent","FormComorbidite","comorbidite","DossierAnamnese","RUBRIQUES_TAGS_AMN","tag","RubriqueTag","bscolor","DossierTraitement","DossierSuivi","DossierRehabilitation","DossierDetails","setDossier","activeTag","setRubriques","setEltDossiers","fetchRubrique","fetchEltDossier","elts","eltDos","FaClinicMedical","FaRegArrowAltCircleRight","FaRegCheckCircle","dossierStep","codeRubrique","_payload$filter","AddDossierPage","FaUserAlt","documentStyle","StyleSheet","create","page","flexDirection","flex","section","margin","padding","flexGrow","textLabel","marginLeft","textValue","fontWeight","textLine","PDFDossierComplet","_getQualification","_dossier$praticien$or","Document","Page","View","Text","getQualification","nb_experience","user_org","index","_ORGANISMES$find","ORGANISMES","ShowDossierPage","Layout","PDFViewer","window","innerWidth","height","innerHeight","RegistreFSPage","RegistrePraticienPage","ShowUserPage","LIST_USER","AdminRoutes","_Fragment","Route","exact","path","component","ComingSoonPage","FaCannabis","FaPhoneAlt"],"sourceRoot":""}